//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FXModel", "FK_fxoder_event_fxorder_ec", "fxorder_ec", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.fxorder_ec), "fxoder_event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.fxoder_event), true)]
[assembly: EdmRelationshipAttribute("FXModel", "FK_fxoder_event_fxorder1", "fxorder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.fxorder), "fxoder_event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.fxoder_event), true)]
[assembly: EdmRelationshipAttribute("FXModel", "FK_fxorder_fxorder_st1", "fxorder_st", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CS.fxorder_st), "fxorder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.fxorder), true)]
[assembly: EdmRelationshipAttribute("FXModel", "FK_fxorder_linkedorder_fxorder_link", "fxorder_link", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.fxorder_link), "fxorder_linkedorder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.fxorder_linkedorder), true)]

#endregion

namespace CS
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FXEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FXEntities object using the connection string found in the 'FXEntities' section of the application configuration file.
        /// </summary>
        public FXEntities() : base("name=FXEntities", "FXEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FXEntities object.
        /// </summary>
        public FXEntities(string connectionString) : base(connectionString, "FXEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FXEntities object.
        /// </summary>
        public FXEntities(EntityConnection connection) : base(connection, "FXEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fxoder_event> fxoder_event
        {
            get
            {
                if ((_fxoder_event == null))
                {
                    _fxoder_event = base.CreateObjectSet<fxoder_event>("fxoder_event");
                }
                return _fxoder_event;
            }
        }
        private ObjectSet<fxoder_event> _fxoder_event;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fxorder> fxorders
        {
            get
            {
                if ((_fxorders == null))
                {
                    _fxorders = base.CreateObjectSet<fxorder>("fxorders");
                }
                return _fxorders;
            }
        }
        private ObjectSet<fxorder> _fxorders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fxorder_ec> fxorder_ec
        {
            get
            {
                if ((_fxorder_ec == null))
                {
                    _fxorder_ec = base.CreateObjectSet<fxorder_ec>("fxorder_ec");
                }
                return _fxorder_ec;
            }
        }
        private ObjectSet<fxorder_ec> _fxorder_ec;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fxorder_fx_hf_dat> fxorder_fx_hf_dat
        {
            get
            {
                if ((_fxorder_fx_hf_dat == null))
                {
                    _fxorder_fx_hf_dat = base.CreateObjectSet<fxorder_fx_hf_dat>("fxorder_fx_hf_dat");
                }
                return _fxorder_fx_hf_dat;
            }
        }
        private ObjectSet<fxorder_fx_hf_dat> _fxorder_fx_hf_dat;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fxorder_link> fxorder_link
        {
            get
            {
                if ((_fxorder_link == null))
                {
                    _fxorder_link = base.CreateObjectSet<fxorder_link>("fxorder_link");
                }
                return _fxorder_link;
            }
        }
        private ObjectSet<fxorder_link> _fxorder_link;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fxorder_linkedorder> fxorder_linkedorder
        {
            get
            {
                if ((_fxorder_linkedorder == null))
                {
                    _fxorder_linkedorder = base.CreateObjectSet<fxorder_linkedorder>("fxorder_linkedorder");
                }
                return _fxorder_linkedorder;
            }
        }
        private ObjectSet<fxorder_linkedorder> _fxorder_linkedorder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fxorder_st> fxorder_st
        {
            get
            {
                if ((_fxorder_st == null))
                {
                    _fxorder_st = base.CreateObjectSet<fxorder_st>("fxorder_st");
                }
                return _fxorder_st;
            }
        }
        private ObjectSet<fxorder_st> _fxorder_st;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<fxorder_fx_hf_dat2> fxorder_fx_hf_dat2
        {
            get
            {
                if ((_fxorder_fx_hf_dat2 == null))
                {
                    _fxorder_fx_hf_dat2 = base.CreateObjectSet<fxorder_fx_hf_dat2>("fxorder_fx_hf_dat2");
                }
                return _fxorder_fx_hf_dat2;
            }
        }
        private ObjectSet<fxorder_fx_hf_dat2> _fxorder_fx_hf_dat2;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fxoder_event EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofxoder_event(fxoder_event fxoder_event)
        {
            base.AddObject("fxoder_event", fxoder_event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fxorders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofxorders(fxorder fxorder)
        {
            base.AddObject("fxorders", fxorder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fxorder_ec EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofxorder_ec(fxorder_ec fxorder_ec)
        {
            base.AddObject("fxorder_ec", fxorder_ec);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fxorder_fx_hf_dat EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofxorder_fx_hf_dat(fxorder_fx_hf_dat fxorder_fx_hf_dat)
        {
            base.AddObject("fxorder_fx_hf_dat", fxorder_fx_hf_dat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fxorder_link EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofxorder_link(fxorder_link fxorder_link)
        {
            base.AddObject("fxorder_link", fxorder_link);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fxorder_linkedorder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofxorder_linkedorder(fxorder_linkedorder fxorder_linkedorder)
        {
            base.AddObject("fxorder_linkedorder", fxorder_linkedorder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fxorder_st EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofxorder_st(fxorder_st fxorder_st)
        {
            base.AddObject("fxorder_st", fxorder_st);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the fxorder_fx_hf_dat2 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofxorder_fx_hf_dat2(fxorder_fx_hf_dat2 fxorder_fx_hf_dat2)
        {
            base.AddObject("fxorder_fx_hf_dat2", fxorder_fx_hf_dat2);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FXModel", Name="fxoder_event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fxoder_event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fxoder_event object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="timestamp">Initial value of the timestamp property.</param>
        /// <param name="event_code">Initial value of the event_code property.</param>
        public static fxoder_event Createfxoder_event(global::System.Int32 id, global::System.DateTime timestamp, global::System.String event_code)
        {
            fxoder_event fxoder_event = new fxoder_event();
            fxoder_event.id = id;
            fxoder_event.timestamp = timestamp;
            fxoder_event.event_code = event_code;
            return fxoder_event;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime timestamp
        {
            get
            {
                return _timestamp;
            }
            set
            {
                if (_timestamp != value)
                {
                    OntimestampChanging(value);
                    ReportPropertyChanging("timestamp");
                    _timestamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("timestamp");
                    OntimestampChanged();
                }
            }
        }
        private global::System.DateTime _timestamp;
        partial void OntimestampChanging(global::System.DateTime value);
        partial void OntimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String event_code
        {
            get
            {
                return _event_code;
            }
            set
            {
                Onevent_codeChanging(value);
                ReportPropertyChanging("event_code");
                _event_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("event_code");
                Onevent_codeChanged();
            }
        }
        private global::System.String _event_code;
        partial void Onevent_codeChanging(global::System.String value);
        partial void Onevent_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTimeOffset> timestamp2
        {
            get
            {
                return _timestamp2;
            }
            set
            {
                Ontimestamp2Changing(value);
                ReportPropertyChanging("timestamp2");
                _timestamp2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timestamp2");
                Ontimestamp2Changed();
            }
        }
        private Nullable<global::System.DateTimeOffset> _timestamp2;
        partial void Ontimestamp2Changing(Nullable<global::System.DateTimeOffset> value);
        partial void Ontimestamp2Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FXModel", "FK_fxoder_event_fxorder_ec", "fxorder_ec")]
        public fxorder_ec fxorder_ec
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder_ec>("FXModel.FK_fxoder_event_fxorder_ec", "fxorder_ec").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder_ec>("FXModel.FK_fxoder_event_fxorder_ec", "fxorder_ec").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<fxorder_ec> fxorder_ecReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder_ec>("FXModel.FK_fxoder_event_fxorder_ec", "fxorder_ec");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<fxorder_ec>("FXModel.FK_fxoder_event_fxorder_ec", "fxorder_ec", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FXModel", "FK_fxoder_event_fxorder1", "fxorder")]
        public fxorder fxorder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder>("FXModel.FK_fxoder_event_fxorder1", "fxorder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder>("FXModel.FK_fxoder_event_fxorder1", "fxorder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<fxorder> fxorderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder>("FXModel.FK_fxoder_event_fxorder1", "fxorder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<fxorder>("FXModel.FK_fxoder_event_fxorder1", "fxorder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FXModel", Name="fxorder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fxorder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fxorder object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static fxorder Createfxorder(global::System.Int32 id)
        {
            fxorder fxorder = new fxorder();
            fxorder.id = id;
            return fxorder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                OnsymbolChanging(value);
                ReportPropertyChanging("symbol");
                _symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("symbol");
                OnsymbolChanged();
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String customer
        {
            get
            {
                return _customer;
            }
            set
            {
                OncustomerChanging(value);
                ReportPropertyChanging("customer");
                _customer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("customer");
                OncustomerChanged();
            }
        }
        private global::System.String _customer;
        partial void OncustomerChanging(global::System.String value);
        partial void OncustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bs
        {
            get
            {
                return _bs;
            }
            set
            {
                OnbsChanging(value);
                ReportPropertyChanging("bs");
                _bs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bs");
                OnbsChanged();
            }
        }
        private global::System.String _bs;
        partial void OnbsChanging(global::System.String value);
        partial void OnbsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ccy
        {
            get
            {
                return _ccy;
            }
            set
            {
                OnccyChanging(value);
                ReportPropertyChanging("ccy");
                _ccy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ccy");
                OnccyChanged();
            }
        }
        private global::System.String _ccy;
        partial void OnccyChanging(global::System.String value);
        partial void OnccyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Double> _amount;
        partial void OnamountChanging(Nullable<global::System.Double> value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private Nullable<global::System.Double> _price;
        partial void OnpriceChanging(Nullable<global::System.Double> value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String bs2
        {
            get
            {
                return _bs2;
            }
            set
            {
                Onbs2Changing(value);
                ReportPropertyChanging("bs2");
                _bs2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("bs2");
                Onbs2Changed();
            }
        }
        private global::System.String _bs2;
        partial void Onbs2Changing(global::System.String value);
        partial void Onbs2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> amount2
        {
            get
            {
                return _amount2;
            }
            set
            {
                Onamount2Changing(value);
                ReportPropertyChanging("amount2");
                _amount2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount2");
                Onamount2Changed();
            }
        }
        private Nullable<global::System.Double> _amount2;
        partial void Onamount2Changing(Nullable<global::System.Double> value);
        partial void Onamount2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String flag
        {
            get
            {
                return _flag;
            }
            set
            {
                OnflagChanging(value);
                ReportPropertyChanging("flag");
                _flag = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("flag");
                OnflagChanged();
            }
        }
        private global::System.String _flag;
        partial void OnflagChanging(global::System.String value);
        partial void OnflagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> live
        {
            get
            {
                return _live;
            }
            set
            {
                OnliveChanging(value);
                ReportPropertyChanging("live");
                _live = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("live");
                OnliveChanged();
            }
        }
        private Nullable<global::System.Boolean> _live;
        partial void OnliveChanging(Nullable<global::System.Boolean> value);
        partial void OnliveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fxcenter
        {
            get
            {
                return _fxcenter;
            }
            set
            {
                OnfxcenterChanging(value);
                ReportPropertyChanging("fxcenter");
                _fxcenter = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fxcenter");
                OnfxcenterChanged();
            }
        }
        private global::System.String _fxcenter;
        partial void OnfxcenterChanging(global::System.String value);
        partial void OnfxcenterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FXModel", "FK_fxoder_event_fxorder1", "fxoder_event")]
        public EntityCollection<fxoder_event> fxoder_event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fxoder_event>("FXModel.FK_fxoder_event_fxorder1", "fxoder_event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fxoder_event>("FXModel.FK_fxoder_event_fxorder1", "fxoder_event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FXModel", "FK_fxorder_fxorder_st1", "fxorder_st")]
        public fxorder_st fxorder_st
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder_st>("FXModel.FK_fxorder_fxorder_st1", "fxorder_st").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder_st>("FXModel.FK_fxorder_fxorder_st1", "fxorder_st").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<fxorder_st> fxorder_stReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder_st>("FXModel.FK_fxorder_fxorder_st1", "fxorder_st");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<fxorder_st>("FXModel.FK_fxorder_fxorder_st1", "fxorder_st", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FXModel", Name="fxorder_ec")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fxorder_ec : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fxorder_ec object.
        /// </summary>
        /// <param name="event_code">Initial value of the event_code property.</param>
        public static fxorder_ec Createfxorder_ec(global::System.String event_code)
        {
            fxorder_ec fxorder_ec = new fxorder_ec();
            fxorder_ec.event_code = event_code;
            return fxorder_ec;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String event_code
        {
            get
            {
                return _event_code;
            }
            set
            {
                if (_event_code != value)
                {
                    Onevent_codeChanging(value);
                    ReportPropertyChanging("event_code");
                    _event_code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("event_code");
                    Onevent_codeChanged();
                }
            }
        }
        private global::System.String _event_code;
        partial void Onevent_codeChanging(global::System.String value);
        partial void Onevent_codeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String @event
        {
            get
            {
                return _event;
            }
            set
            {
                OneventChanging(value);
                ReportPropertyChanging("event");
                _event = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("event");
                OneventChanged();
            }
        }
        private global::System.String _event;
        partial void OneventChanging(global::System.String value);
        partial void OneventChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FXModel", "FK_fxoder_event_fxorder_ec", "fxoder_event")]
        public EntityCollection<fxoder_event> fxoder_event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fxoder_event>("FXModel.FK_fxoder_event_fxorder_ec", "fxoder_event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fxoder_event>("FXModel.FK_fxoder_event_fxorder_ec", "fxoder_event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FXModel", Name="fxorder_fx_hf_dat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fxorder_fx_hf_dat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fxorder_fx_hf_dat object.
        /// </summary>
        /// <param name="trade_date">Initial value of the trade_date property.</param>
        /// <param name="symbol">Initial value of the symbol property.</param>
        public static fxorder_fx_hf_dat Createfxorder_fx_hf_dat(global::System.DateTime trade_date, global::System.String symbol)
        {
            fxorder_fx_hf_dat fxorder_fx_hf_dat = new fxorder_fx_hf_dat();
            fxorder_fx_hf_dat.trade_date = trade_date;
            fxorder_fx_hf_dat.symbol = symbol;
            return fxorder_fx_hf_dat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime trade_date
        {
            get
            {
                return _trade_date;
            }
            set
            {
                if (_trade_date != value)
                {
                    Ontrade_dateChanging(value);
                    ReportPropertyChanging("trade_date");
                    _trade_date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("trade_date");
                    Ontrade_dateChanged();
                }
            }
        }
        private global::System.DateTime _trade_date;
        partial void Ontrade_dateChanging(global::System.DateTime value);
        partial void Ontrade_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                if (_symbol != value)
                {
                    OnsymbolChanging(value);
                    ReportPropertyChanging("symbol");
                    _symbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("symbol");
                    OnsymbolChanged();
                }
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> bid
        {
            get
            {
                return _bid;
            }
            set
            {
                OnbidChanging(value);
                ReportPropertyChanging("bid");
                _bid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bid");
                OnbidChanged();
            }
        }
        private Nullable<global::System.Double> _bid;
        partial void OnbidChanging(Nullable<global::System.Double> value);
        partial void OnbidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ask
        {
            get
            {
                return _ask;
            }
            set
            {
                OnaskChanging(value);
                ReportPropertyChanging("ask");
                _ask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ask");
                OnaskChanged();
            }
        }
        private Nullable<global::System.Double> _ask;
        partial void OnaskChanging(Nullable<global::System.Double> value);
        partial void OnaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> price_src_id
        {
            get
            {
                return _price_src_id;
            }
            set
            {
                Onprice_src_idChanging(value);
                ReportPropertyChanging("price_src_id");
                _price_src_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price_src_id");
                Onprice_src_idChanged();
            }
        }
        private Nullable<global::System.Int32> _price_src_id;
        partial void Onprice_src_idChanging(Nullable<global::System.Int32> value);
        partial void Onprice_src_idChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FXModel", Name="fxorder_fx_hf_dat2")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fxorder_fx_hf_dat2 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fxorder_fx_hf_dat2 object.
        /// </summary>
        /// <param name="timestampUTC">Initial value of the timestampUTC property.</param>
        /// <param name="symbol">Initial value of the symbol property.</param>
        public static fxorder_fx_hf_dat2 Createfxorder_fx_hf_dat2(global::System.DateTimeOffset timestampUTC, global::System.String symbol)
        {
            fxorder_fx_hf_dat2 fxorder_fx_hf_dat2 = new fxorder_fx_hf_dat2();
            fxorder_fx_hf_dat2.timestampUTC = timestampUTC;
            fxorder_fx_hf_dat2.symbol = symbol;
            return fxorder_fx_hf_dat2;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset timestampUTC
        {
            get
            {
                return _timestampUTC;
            }
            set
            {
                if (_timestampUTC != value)
                {
                    OntimestampUTCChanging(value);
                    ReportPropertyChanging("timestampUTC");
                    _timestampUTC = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("timestampUTC");
                    OntimestampUTCChanged();
                }
            }
        }
        private global::System.DateTimeOffset _timestampUTC;
        partial void OntimestampUTCChanging(global::System.DateTimeOffset value);
        partial void OntimestampUTCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                if (_symbol != value)
                {
                    OnsymbolChanging(value);
                    ReportPropertyChanging("symbol");
                    _symbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("symbol");
                    OnsymbolChanged();
                }
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> bid
        {
            get
            {
                return _bid;
            }
            set
            {
                OnbidChanging(value);
                ReportPropertyChanging("bid");
                _bid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bid");
                OnbidChanged();
            }
        }
        private Nullable<global::System.Double> _bid;
        partial void OnbidChanging(Nullable<global::System.Double> value);
        partial void OnbidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ask
        {
            get
            {
                return _ask;
            }
            set
            {
                OnaskChanging(value);
                ReportPropertyChanging("ask");
                _ask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ask");
                OnaskChanged();
            }
        }
        private Nullable<global::System.Double> _ask;
        partial void OnaskChanging(Nullable<global::System.Double> value);
        partial void OnaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> price_src_id
        {
            get
            {
                return _price_src_id;
            }
            set
            {
                Onprice_src_idChanging(value);
                ReportPropertyChanging("price_src_id");
                _price_src_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price_src_id");
                Onprice_src_idChanged();
            }
        }
        private Nullable<global::System.Int32> _price_src_id;
        partial void Onprice_src_idChanging(Nullable<global::System.Int32> value);
        partial void Onprice_src_idChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FXModel", Name="fxorder_link")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fxorder_link : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fxorder_link object.
        /// </summary>
        /// <param name="link_id">Initial value of the link_id property.</param>
        public static fxorder_link Createfxorder_link(global::System.Int32 link_id)
        {
            fxorder_link fxorder_link = new fxorder_link();
            fxorder_link.link_id = link_id;
            return fxorder_link;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 link_id
        {
            get
            {
                return _link_id;
            }
            set
            {
                if (_link_id != value)
                {
                    Onlink_idChanging(value);
                    ReportPropertyChanging("link_id");
                    _link_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("link_id");
                    Onlink_idChanged();
                }
            }
        }
        private global::System.Int32 _link_id;
        partial void Onlink_idChanging(global::System.Int32 value);
        partial void Onlink_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String link_type
        {
            get
            {
                return _link_type;
            }
            set
            {
                Onlink_typeChanging(value);
                ReportPropertyChanging("link_type");
                _link_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("link_type");
                Onlink_typeChanged();
            }
        }
        private global::System.String _link_type;
        partial void Onlink_typeChanging(global::System.String value);
        partial void Onlink_typeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FXModel", "FK_fxorder_linkedorder_fxorder_link", "fxorder_linkedorder")]
        public EntityCollection<fxorder_linkedorder> fxorder_linkedorder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fxorder_linkedorder>("FXModel.FK_fxorder_linkedorder_fxorder_link", "fxorder_linkedorder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fxorder_linkedorder>("FXModel.FK_fxorder_linkedorder_fxorder_link", "fxorder_linkedorder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FXModel", Name="fxorder_linkedorder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fxorder_linkedorder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fxorder_linkedorder object.
        /// </summary>
        /// <param name="link_id">Initial value of the link_id property.</param>
        /// <param name="fxorder_id">Initial value of the fxorder_id property.</param>
        public static fxorder_linkedorder Createfxorder_linkedorder(global::System.Int32 link_id, global::System.Int32 fxorder_id)
        {
            fxorder_linkedorder fxorder_linkedorder = new fxorder_linkedorder();
            fxorder_linkedorder.link_id = link_id;
            fxorder_linkedorder.fxorder_id = fxorder_id;
            return fxorder_linkedorder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 link_id
        {
            get
            {
                return _link_id;
            }
            set
            {
                if (_link_id != value)
                {
                    Onlink_idChanging(value);
                    ReportPropertyChanging("link_id");
                    _link_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("link_id");
                    Onlink_idChanged();
                }
            }
        }
        private global::System.Int32 _link_id;
        partial void Onlink_idChanging(global::System.Int32 value);
        partial void Onlink_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fxorder_id
        {
            get
            {
                return _fxorder_id;
            }
            set
            {
                if (_fxorder_id != value)
                {
                    Onfxorder_idChanging(value);
                    ReportPropertyChanging("fxorder_id");
                    _fxorder_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fxorder_id");
                    Onfxorder_idChanged();
                }
            }
        }
        private global::System.Int32 _fxorder_id;
        partial void Onfxorder_idChanging(global::System.Int32 value);
        partial void Onfxorder_idChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FXModel", "FK_fxorder_linkedorder_fxorder_link", "fxorder_link")]
        public fxorder_link fxorder_link
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder_link>("FXModel.FK_fxorder_linkedorder_fxorder_link", "fxorder_link").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder_link>("FXModel.FK_fxorder_linkedorder_fxorder_link", "fxorder_link").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<fxorder_link> fxorder_linkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<fxorder_link>("FXModel.FK_fxorder_linkedorder_fxorder_link", "fxorder_link");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<fxorder_link>("FXModel.FK_fxorder_linkedorder_fxorder_link", "fxorder_link", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FXModel", Name="fxorder_st")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class fxorder_st : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new fxorder_st object.
        /// </summary>
        /// <param name="symbol">Initial value of the symbol property.</param>
        public static fxorder_st Createfxorder_st(global::System.String symbol)
        {
            fxorder_st fxorder_st = new fxorder_st();
            fxorder_st.symbol = symbol;
            return fxorder_st;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                if (_symbol != value)
                {
                    OnsymbolChanging(value);
                    ReportPropertyChanging("symbol");
                    _symbol = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("symbol");
                    OnsymbolChanged();
                }
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency_base
        {
            get
            {
                return _currency_base;
            }
            set
            {
                Oncurrency_baseChanging(value);
                ReportPropertyChanging("currency_base");
                _currency_base = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currency_base");
                Oncurrency_baseChanged();
            }
        }
        private global::System.String _currency_base;
        partial void Oncurrency_baseChanging(global::System.String value);
        partial void Oncurrency_baseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String currency_unit
        {
            get
            {
                return _currency_unit;
            }
            set
            {
                Oncurrency_unitChanging(value);
                ReportPropertyChanging("currency_unit");
                _currency_unit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("currency_unit");
                Oncurrency_unitChanged();
            }
        }
        private global::System.String _currency_unit;
        partial void Oncurrency_unitChanging(global::System.String value);
        partial void Oncurrency_unitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> against_usd
        {
            get
            {
                return _against_usd;
            }
            set
            {
                Onagainst_usdChanging(value);
                ReportPropertyChanging("against_usd");
                _against_usd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("against_usd");
                Onagainst_usdChanged();
            }
        }
        private Nullable<global::System.Boolean> _against_usd;
        partial void Onagainst_usdChanging(Nullable<global::System.Boolean> value);
        partial void Onagainst_usdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> invers
        {
            get
            {
                return _invers;
            }
            set
            {
                OninversChanging(value);
                ReportPropertyChanging("invers");
                _invers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invers");
                OninversChanged();
            }
        }
        private Nullable<global::System.Boolean> _invers;
        partial void OninversChanging(Nullable<global::System.Boolean> value);
        partial void OninversChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FXModel", "FK_fxorder_fxorder_st1", "fxorder")]
        public EntityCollection<fxorder> fxorders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<fxorder>("FXModel.FK_fxorder_fxorder_st1", "fxorder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<fxorder>("FXModel.FK_fxorder_fxorder_st1", "fxorder", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
