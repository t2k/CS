//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioLists_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.Portfolio), "PortfolioLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.CreditUniverseList), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioLoss_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.Portfolio), "PortfolioLGD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioLGD), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioSimBinHist_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.Portfolio), "PortfolioSimBinHist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioSimBinHist), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioSimResult_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.Portfolio), "PortfolioSimResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioSimResult), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioSimulation_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CS.Portfolio), "PortfolioSimulation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioSimulation), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioSubstitution_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.Portfolio), "PortfolioSubstitution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioSubstitution), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioTranche_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.Portfolio), "PortfolioTranche", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioTranche), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioTrancheLossBins_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.Portfolio), "PortfolioTrancheLossBins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioTrancheLossBin), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioWARF_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.Portfolio), "PortfolioWARF", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioWARF), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioWAS_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.Portfolio), "PortfolioWAS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioWA), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_TrancheTrade_Portfolio", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CS.Portfolio), "TrancheTrade", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.TrancheTrade), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "PortfolioTrades_FK00", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.Portfolio), "PortfolioTrades", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioTrade), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioLists_PortfolioList", "PortfolioList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.CreditUniverse), "PortfolioLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.CreditUniverseList), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioSimulationBins_PortfolioSimulation", "PortfolioSimulation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.PortfolioSimulation), "PortfolioSimulationBins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioSimulationBin), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioSimulationResult_PortfolioSimulation", "PortfolioSimulation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.PortfolioSimulation), "PortfolioSimulationResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioSimulationResult), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_TTPriceHist_PortfolioSimulation", "PortfolioSimulation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.PortfolioSimulation), "TTPriceHist", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CS.TTPriceHist), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioSubstitution_PortfolioSubstitutionHeader", "PortfolioSubstitutionHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.PortfolioSubstitutionHeader), "PortfolioSubstitution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioSubstitution), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_PortfolioTrancheLossBins_PortfolioTranche", "PortfolioTranche", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.PortfolioTranche), "PortfolioTrancheLossBins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.PortfolioTrancheLossBin), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_TrancheTradeLossBins_TrancheTrade", "TrancheTrade", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.TrancheTrade), "TrancheTradeLossBins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.TrancheTradeLossBin), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_TTRevalInput_TrancheTrade", "TrancheTrade", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.TrancheTrade), "TTRevalInput", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.TTRevalInput), true)]
[assembly: EdmRelationshipAttribute("CreditTradingModel", "FK_TTRevalInput_TTList", "TTList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CS.TrancheTradeList), "TTRevalInput", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CS.TTRevalInput), true)]

#endregion

namespace CS
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CreditTradingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CreditTradingEntities object using the connection string found in the 'CreditTradingEntities' section of the application configuration file.
        /// </summary>
        public CreditTradingEntities() : base("name=CreditTradingEntities", "CreditTradingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CreditTradingEntities object.
        /// </summary>
        public CreditTradingEntities(string connectionString) : base(connectionString, "CreditTradingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CreditTradingEntities object.
        /// </summary>
        public CreditTradingEntities(EntityConnection connection) : base(connection, "CreditTradingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Portfolio> Portfolios
        {
            get
            {
                if ((_Portfolios == null))
                {
                    _Portfolios = base.CreateObjectSet<Portfolio>("Portfolios");
                }
                return _Portfolios;
            }
        }
        private ObjectSet<Portfolio> _Portfolios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioCorrelation> PortfolioCorrelations
        {
            get
            {
                if ((_PortfolioCorrelations == null))
                {
                    _PortfolioCorrelations = base.CreateObjectSet<PortfolioCorrelation>("PortfolioCorrelations");
                }
                return _PortfolioCorrelations;
            }
        }
        private ObjectSet<PortfolioCorrelation> _PortfolioCorrelations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioLGD> PortfolioLGDs
        {
            get
            {
                if ((_PortfolioLGDs == null))
                {
                    _PortfolioLGDs = base.CreateObjectSet<PortfolioLGD>("PortfolioLGDs");
                }
                return _PortfolioLGDs;
            }
        }
        private ObjectSet<PortfolioLGD> _PortfolioLGDs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CreditUniverse> CreditUniverses
        {
            get
            {
                if ((_CreditUniverses == null))
                {
                    _CreditUniverses = base.CreateObjectSet<CreditUniverse>("CreditUniverses");
                }
                return _CreditUniverses;
            }
        }
        private ObjectSet<CreditUniverse> _CreditUniverses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CreditUniverseList> CreditUniverseLists
        {
            get
            {
                if ((_CreditUniverseLists == null))
                {
                    _CreditUniverseLists = base.CreateObjectSet<CreditUniverseList>("CreditUniverseLists");
                }
                return _CreditUniverseLists;
            }
        }
        private ObjectSet<CreditUniverseList> _CreditUniverseLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioSimBinHist> PortfolioSimBinHists
        {
            get
            {
                if ((_PortfolioSimBinHists == null))
                {
                    _PortfolioSimBinHists = base.CreateObjectSet<PortfolioSimBinHist>("PortfolioSimBinHists");
                }
                return _PortfolioSimBinHists;
            }
        }
        private ObjectSet<PortfolioSimBinHist> _PortfolioSimBinHists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioSimResult> PortfolioSimResults
        {
            get
            {
                if ((_PortfolioSimResults == null))
                {
                    _PortfolioSimResults = base.CreateObjectSet<PortfolioSimResult>("PortfolioSimResults");
                }
                return _PortfolioSimResults;
            }
        }
        private ObjectSet<PortfolioSimResult> _PortfolioSimResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioSimulation> PortfolioSimulations
        {
            get
            {
                if ((_PortfolioSimulations == null))
                {
                    _PortfolioSimulations = base.CreateObjectSet<PortfolioSimulation>("PortfolioSimulations");
                }
                return _PortfolioSimulations;
            }
        }
        private ObjectSet<PortfolioSimulation> _PortfolioSimulations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioSimulationBin> PortfolioSimulationBins
        {
            get
            {
                if ((_PortfolioSimulationBins == null))
                {
                    _PortfolioSimulationBins = base.CreateObjectSet<PortfolioSimulationBin>("PortfolioSimulationBins");
                }
                return _PortfolioSimulationBins;
            }
        }
        private ObjectSet<PortfolioSimulationBin> _PortfolioSimulationBins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioSimulationResult> PortfolioSimulationResults
        {
            get
            {
                if ((_PortfolioSimulationResults == null))
                {
                    _PortfolioSimulationResults = base.CreateObjectSet<PortfolioSimulationResult>("PortfolioSimulationResults");
                }
                return _PortfolioSimulationResults;
            }
        }
        private ObjectSet<PortfolioSimulationResult> _PortfolioSimulationResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioSubstitution> PortfolioSubstitutions
        {
            get
            {
                if ((_PortfolioSubstitutions == null))
                {
                    _PortfolioSubstitutions = base.CreateObjectSet<PortfolioSubstitution>("PortfolioSubstitutions");
                }
                return _PortfolioSubstitutions;
            }
        }
        private ObjectSet<PortfolioSubstitution> _PortfolioSubstitutions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioSubstitutionHeader> PortfolioSubstitutionHeaders
        {
            get
            {
                if ((_PortfolioSubstitutionHeaders == null))
                {
                    _PortfolioSubstitutionHeaders = base.CreateObjectSet<PortfolioSubstitutionHeader>("PortfolioSubstitutionHeaders");
                }
                return _PortfolioSubstitutionHeaders;
            }
        }
        private ObjectSet<PortfolioSubstitutionHeader> _PortfolioSubstitutionHeaders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioTrade> PortfolioTrades
        {
            get
            {
                if ((_PortfolioTrades == null))
                {
                    _PortfolioTrades = base.CreateObjectSet<PortfolioTrade>("PortfolioTrades");
                }
                return _PortfolioTrades;
            }
        }
        private ObjectSet<PortfolioTrade> _PortfolioTrades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioTranche> PortfolioTranches
        {
            get
            {
                if ((_PortfolioTranches == null))
                {
                    _PortfolioTranches = base.CreateObjectSet<PortfolioTranche>("PortfolioTranches");
                }
                return _PortfolioTranches;
            }
        }
        private ObjectSet<PortfolioTranche> _PortfolioTranches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioTrancheLossBin> PortfolioTrancheLossBins
        {
            get
            {
                if ((_PortfolioTrancheLossBins == null))
                {
                    _PortfolioTrancheLossBins = base.CreateObjectSet<PortfolioTrancheLossBin>("PortfolioTrancheLossBins");
                }
                return _PortfolioTrancheLossBins;
            }
        }
        private ObjectSet<PortfolioTrancheLossBin> _PortfolioTrancheLossBins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioType> PortfolioTypes
        {
            get
            {
                if ((_PortfolioTypes == null))
                {
                    _PortfolioTypes = base.CreateObjectSet<PortfolioType>("PortfolioTypes");
                }
                return _PortfolioTypes;
            }
        }
        private ObjectSet<PortfolioType> _PortfolioTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioWARF> PortfolioWARves
        {
            get
            {
                if ((_PortfolioWARves == null))
                {
                    _PortfolioWARves = base.CreateObjectSet<PortfolioWARF>("PortfolioWARves");
                }
                return _PortfolioWARves;
            }
        }
        private ObjectSet<PortfolioWARF> _PortfolioWARves;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PortfolioWA> PortfolioWAS
        {
            get
            {
                if ((_PortfolioWAS == null))
                {
                    _PortfolioWAS = base.CreateObjectSet<PortfolioWA>("PortfolioWAS");
                }
                return _PortfolioWAS;
            }
        }
        private ObjectSet<PortfolioWA> _PortfolioWAS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrancheTrade> TrancheTrades
        {
            get
            {
                if ((_TrancheTrades == null))
                {
                    _TrancheTrades = base.CreateObjectSet<TrancheTrade>("TrancheTrades");
                }
                return _TrancheTrades;
            }
        }
        private ObjectSet<TrancheTrade> _TrancheTrades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrancheTradeLossBin> TrancheTradeLossBins
        {
            get
            {
                if ((_TrancheTradeLossBins == null))
                {
                    _TrancheTradeLossBins = base.CreateObjectSet<TrancheTradeLossBin>("TrancheTradeLossBins");
                }
                return _TrancheTradeLossBins;
            }
        }
        private ObjectSet<TrancheTradeLossBin> _TrancheTradeLossBins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrancheTradeList> TrancheTradeLists
        {
            get
            {
                if ((_TrancheTradeLists == null))
                {
                    _TrancheTradeLists = base.CreateObjectSet<TrancheTradeList>("TrancheTradeLists");
                }
                return _TrancheTradeLists;
            }
        }
        private ObjectSet<TrancheTradeList> _TrancheTradeLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TTPriceHist> TTPriceHists
        {
            get
            {
                if ((_TTPriceHists == null))
                {
                    _TTPriceHists = base.CreateObjectSet<TTPriceHist>("TTPriceHists");
                }
                return _TTPriceHists;
            }
        }
        private ObjectSet<TTPriceHist> _TTPriceHists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TTRevalInput> TTRevalInputs
        {
            get
            {
                if ((_TTRevalInputs == null))
                {
                    _TTRevalInputs = base.CreateObjectSet<TTRevalInput>("TTRevalInputs");
                }
                return _TTRevalInputs;
            }
        }
        private ObjectSet<TTRevalInput> _TTRevalInputs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Security_Master> Security_Masters
        {
            get
            {
                if ((_Security_Masters == null))
                {
                    _Security_Masters = base.CreateObjectSet<Security_Master>("Security_Masters");
                }
                return _Security_Masters;
            }
        }
        private ObjectSet<Security_Master> _Security_Masters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CDOClass> CDOClasses
        {
            get
            {
                if ((_CDOClasses == null))
                {
                    _CDOClasses = base.CreateObjectSet<CDOClass>("CDOClasses");
                }
                return _CDOClasses;
            }
        }
        private ObjectSet<CDOClass> _CDOClasses;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Portfolios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolios(Portfolio portfolio)
        {
            base.AddObject("Portfolios", portfolio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioCorrelations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioCorrelations(PortfolioCorrelation portfolioCorrelation)
        {
            base.AddObject("PortfolioCorrelations", portfolioCorrelation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioLGDs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioLGDs(PortfolioLGD portfolioLGD)
        {
            base.AddObject("PortfolioLGDs", portfolioLGD);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CreditUniverses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreditUniverses(CreditUniverse creditUniverse)
        {
            base.AddObject("CreditUniverses", creditUniverse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CreditUniverseLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreditUniverseLists(CreditUniverseList creditUniverseList)
        {
            base.AddObject("CreditUniverseLists", creditUniverseList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioSimBinHists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioSimBinHists(PortfolioSimBinHist portfolioSimBinHist)
        {
            base.AddObject("PortfolioSimBinHists", portfolioSimBinHist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioSimResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioSimResults(PortfolioSimResult portfolioSimResult)
        {
            base.AddObject("PortfolioSimResults", portfolioSimResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioSimulations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioSimulations(PortfolioSimulation portfolioSimulation)
        {
            base.AddObject("PortfolioSimulations", portfolioSimulation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioSimulationBins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioSimulationBins(PortfolioSimulationBin portfolioSimulationBin)
        {
            base.AddObject("PortfolioSimulationBins", portfolioSimulationBin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioSimulationResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioSimulationResults(PortfolioSimulationResult portfolioSimulationResult)
        {
            base.AddObject("PortfolioSimulationResults", portfolioSimulationResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioSubstitutions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioSubstitutions(PortfolioSubstitution portfolioSubstitution)
        {
            base.AddObject("PortfolioSubstitutions", portfolioSubstitution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioSubstitutionHeaders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioSubstitutionHeaders(PortfolioSubstitutionHeader portfolioSubstitutionHeader)
        {
            base.AddObject("PortfolioSubstitutionHeaders", portfolioSubstitutionHeader);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioTrades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioTrades(PortfolioTrade portfolioTrade)
        {
            base.AddObject("PortfolioTrades", portfolioTrade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioTranches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioTranches(PortfolioTranche portfolioTranche)
        {
            base.AddObject("PortfolioTranches", portfolioTranche);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioTrancheLossBins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioTrancheLossBins(PortfolioTrancheLossBin portfolioTrancheLossBin)
        {
            base.AddObject("PortfolioTrancheLossBins", portfolioTrancheLossBin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioTypes(PortfolioType portfolioType)
        {
            base.AddObject("PortfolioTypes", portfolioType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioWARves EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioWARves(PortfolioWARF portfolioWARF)
        {
            base.AddObject("PortfolioWARves", portfolioWARF);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PortfolioWAS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolioWAS(PortfolioWA portfolioWA)
        {
            base.AddObject("PortfolioWAS", portfolioWA);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrancheTrades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrancheTrades(TrancheTrade trancheTrade)
        {
            base.AddObject("TrancheTrades", trancheTrade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrancheTradeLossBins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrancheTradeLossBins(TrancheTradeLossBin trancheTradeLossBin)
        {
            base.AddObject("TrancheTradeLossBins", trancheTradeLossBin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrancheTradeLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrancheTradeLists(TrancheTradeList trancheTradeList)
        {
            base.AddObject("TrancheTradeLists", trancheTradeList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TTPriceHists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTTPriceHists(TTPriceHist tTPriceHist)
        {
            base.AddObject("TTPriceHists", tTPriceHist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TTRevalInputs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTTRevalInputs(TTRevalInput tTRevalInput)
        {
            base.AddObject("TTRevalInputs", tTRevalInput);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Security_Masters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurity_Masters(Security_Master security_Master)
        {
            base.AddObject("Security_Masters", security_Master);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CDOClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCDOClasses(CDOClass cDOClass)
        {
            base.AddObject("CDOClasses", cDOClass);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="CDOClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CDOClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CDOClass object.
        /// </summary>
        /// <param name="cDOClassCode">Initial value of the CDOClassCode property.</param>
        public static CDOClass CreateCDOClass(global::System.String cDOClassCode)
        {
            CDOClass cDOClass = new CDOClass();
            cDOClass.CDOClassCode = cDOClassCode;
            return cDOClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CDOClassCode
        {
            get
            {
                return _CDOClassCode;
            }
            set
            {
                if (_CDOClassCode != value)
                {
                    OnCDOClassCodeChanging(value);
                    ReportPropertyChanging("CDOClassCode");
                    _CDOClassCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CDOClassCode");
                    OnCDOClassCodeChanged();
                }
            }
        }
        private global::System.String _CDOClassCode;
        partial void OnCDOClassCodeChanging(global::System.String value);
        partial void OnCDOClassCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CDOClassDescription
        {
            get
            {
                return _CDOClassDescription;
            }
            set
            {
                OnCDOClassDescriptionChanging(value);
                ReportPropertyChanging("CDOClassDescription");
                _CDOClassDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CDOClassDescription");
                OnCDOClassDescriptionChanged();
            }
        }
        private global::System.String _CDOClassDescription;
        partial void OnCDOClassDescriptionChanging(global::System.String value);
        partial void OnCDOClassDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CDOClassSort
        {
            get
            {
                return _CDOClassSort;
            }
            set
            {
                OnCDOClassSortChanging(value);
                ReportPropertyChanging("CDOClassSort");
                _CDOClassSort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CDOClassSort");
                OnCDOClassSortChanged();
            }
        }
        private Nullable<global::System.Int32> _CDOClassSort;
        partial void OnCDOClassSortChanging(Nullable<global::System.Int32> value);
        partial void OnCDOClassSortChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="CreditUniverse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CreditUniverse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreditUniverse object.
        /// </summary>
        /// <param name="creditUniverseName">Initial value of the CreditUniverseName property.</param>
        public static CreditUniverse CreateCreditUniverse(global::System.String creditUniverseName)
        {
            CreditUniverse creditUniverse = new CreditUniverse();
            creditUniverse.CreditUniverseName = creditUniverseName;
            return creditUniverse;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreditUniverseName
        {
            get
            {
                return _CreditUniverseName;
            }
            set
            {
                if (_CreditUniverseName != value)
                {
                    OnCreditUniverseNameChanging(value);
                    ReportPropertyChanging("CreditUniverseName");
                    _CreditUniverseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreditUniverseName");
                    OnCreditUniverseNameChanged();
                }
            }
        }
        private global::System.String _CreditUniverseName;
        partial void OnCreditUniverseNameChanging(global::System.String value);
        partial void OnCreditUniverseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Batchable
        {
            get
            {
                return _Batchable;
            }
            set
            {
                OnBatchableChanging(value);
                ReportPropertyChanging("Batchable");
                _Batchable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Batchable");
                OnBatchableChanged();
            }
        }
        private Nullable<global::System.Boolean> _Batchable;
        partial void OnBatchableChanging(Nullable<global::System.Boolean> value);
        partial void OnBatchableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BatchDate
        {
            get
            {
                return _BatchDate;
            }
            set
            {
                OnBatchDateChanging(value);
                ReportPropertyChanging("BatchDate");
                _BatchDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchDate");
                OnBatchDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BatchDate;
        partial void OnBatchDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBatchDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDefault;
        partial void OnIsDefaultChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDefaultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioLists_PortfolioList", "PortfolioLists")]
        public EntityCollection<CreditUniverseList> PortfolioLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CreditUniverseList>("CreditTradingModel.FK_PortfolioLists_PortfolioList", "PortfolioLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CreditUniverseList>("CreditTradingModel.FK_PortfolioLists_PortfolioList", "PortfolioLists", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="CreditUniverseList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CreditUniverseList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreditUniverseList object.
        /// </summary>
        /// <param name="creditUniverseName">Initial value of the CreditUniverseName property.</param>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        public static CreditUniverseList CreateCreditUniverseList(global::System.String creditUniverseName, global::System.String portfolioName)
        {
            CreditUniverseList creditUniverseList = new CreditUniverseList();
            creditUniverseList.CreditUniverseName = creditUniverseName;
            creditUniverseList.PortfolioName = portfolioName;
            return creditUniverseList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreditUniverseName
        {
            get
            {
                return _CreditUniverseName;
            }
            set
            {
                if (_CreditUniverseName != value)
                {
                    OnCreditUniverseNameChanging(value);
                    ReportPropertyChanging("CreditUniverseName");
                    _CreditUniverseName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CreditUniverseName");
                    OnCreditUniverseNameChanged();
                }
            }
        }
        private global::System.String _CreditUniverseName;
        partial void OnCreditUniverseNameChanging(global::System.String value);
        partial void OnCreditUniverseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortfolioCorrelation
        {
            get
            {
                return _PortfolioCorrelation;
            }
            set
            {
                OnPortfolioCorrelationChanging(value);
                ReportPropertyChanging("PortfolioCorrelation");
                _PortfolioCorrelation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioCorrelation");
                OnPortfolioCorrelationChanged();
            }
        }
        private Nullable<global::System.Double> _PortfolioCorrelation;
        partial void OnPortfolioCorrelationChanging(Nullable<global::System.Double> value);
        partial void OnPortfolioCorrelationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PortfolioNumDraws
        {
            get
            {
                return _PortfolioNumDraws;
            }
            set
            {
                OnPortfolioNumDrawsChanging(value);
                ReportPropertyChanging("PortfolioNumDraws");
                _PortfolioNumDraws = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioNumDraws");
                OnPortfolioNumDrawsChanged();
            }
        }
        private Nullable<global::System.Int32> _PortfolioNumDraws;
        partial void OnPortfolioNumDrawsChanging(Nullable<global::System.Int32> value);
        partial void OnPortfolioNumDrawsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioLists_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioLists_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioLists_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioLists_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioLists_Portfolio", "Portfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioLists_PortfolioList", "PortfolioList")]
        public CreditUniverse PortfolioList2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditUniverse>("CreditTradingModel.FK_PortfolioLists_PortfolioList", "PortfolioList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditUniverse>("CreditTradingModel.FK_PortfolioLists_PortfolioList", "PortfolioList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CreditUniverse> PortfolioList2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CreditUniverse>("CreditTradingModel.FK_PortfolioLists_PortfolioList", "PortfolioList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CreditUniverse>("CreditTradingModel.FK_PortfolioLists_PortfolioList", "PortfolioList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="Portfolio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Portfolio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Portfolio object.
        /// </summary>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        public static Portfolio CreatePortfolio(global::System.String portfolioName)
        {
            Portfolio portfolio = new Portfolio();
            portfolio.PortfolioName = portfolioName;
            return portfolio;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortfolioDescription
        {
            get
            {
                return _PortfolioDescription;
            }
            set
            {
                OnPortfolioDescriptionChanging(value);
                ReportPropertyChanging("PortfolioDescription");
                _PortfolioDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortfolioDescription");
                OnPortfolioDescriptionChanged();
            }
        }
        private global::System.String _PortfolioDescription;
        partial void OnPortfolioDescriptionChanging(global::System.String value);
        partial void OnPortfolioDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortfolioType
        {
            get
            {
                return _PortfolioType;
            }
            set
            {
                OnPortfolioTypeChanging(value);
                ReportPropertyChanging("PortfolioType");
                _PortfolioType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortfolioType");
                OnPortfolioTypeChanged();
            }
        }
        private global::System.String _PortfolioType;
        partial void OnPortfolioTypeChanging(global::System.String value);
        partial void OnPortfolioTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortfolioClass
        {
            get
            {
                return _PortfolioClass;
            }
            set
            {
                OnPortfolioClassChanging(value);
                ReportPropertyChanging("PortfolioClass");
                _PortfolioClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortfolioClass");
                OnPortfolioClassChanged();
            }
        }
        private global::System.String _PortfolioClass;
        partial void OnPortfolioClassChanging(global::System.String value);
        partial void OnPortfolioClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortfolioMgrStatus
        {
            get
            {
                return _PortfolioMgrStatus;
            }
            set
            {
                OnPortfolioMgrStatusChanging(value);
                ReportPropertyChanging("PortfolioMgrStatus");
                _PortfolioMgrStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortfolioMgrStatus");
                OnPortfolioMgrStatusChanged();
            }
        }
        private global::System.String _PortfolioMgrStatus;
        partial void OnPortfolioMgrStatusChanging(global::System.String value);
        partial void OnPortfolioMgrStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveDate;
        partial void OnEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ScheduledTermination
        {
            get
            {
                return _ScheduledTermination;
            }
            set
            {
                OnScheduledTerminationChanging(value);
                ReportPropertyChanging("ScheduledTermination");
                _ScheduledTermination = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduledTermination");
                OnScheduledTerminationChanged();
            }
        }
        private Nullable<global::System.DateTime> _ScheduledTermination;
        partial void OnScheduledTerminationChanging(Nullable<global::System.DateTime> value);
        partial void OnScheduledTerminationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Daycount
        {
            get
            {
                return _Daycount;
            }
            set
            {
                OnDaycountChanging(value);
                ReportPropertyChanging("Daycount");
                _Daycount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Daycount");
                OnDaycountChanged();
            }
        }
        private global::System.String _Daycount;
        partial void OnDaycountChanging(global::System.String value);
        partial void OnDaycountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Roll
        {
            get
            {
                return _Roll;
            }
            set
            {
                OnRollChanging(value);
                ReportPropertyChanging("Roll");
                _Roll = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Roll");
                OnRollChanged();
            }
        }
        private global::System.String _Roll;
        partial void OnRollChanging(global::System.String value);
        partial void OnRollChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Calendar
        {
            get
            {
                return _Calendar;
            }
            set
            {
                OnCalendarChanging(value);
                ReportPropertyChanging("Calendar");
                _Calendar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Calendar");
                OnCalendarChanged();
            }
        }
        private global::System.String _Calendar;
        partial void OnCalendarChanging(global::System.String value);
        partial void OnCalendarChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioLists_Portfolio", "PortfolioLists")]
        public EntityCollection<CreditUniverseList> PortfolioLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CreditUniverseList>("CreditTradingModel.FK_PortfolioLists_Portfolio", "PortfolioLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CreditUniverseList>("CreditTradingModel.FK_PortfolioLists_Portfolio", "PortfolioLists", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioLoss_Portfolio", "PortfolioLGD")]
        public EntityCollection<PortfolioLGD> PortfolioLGDs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioLGD>("CreditTradingModel.FK_PortfolioLoss_Portfolio", "PortfolioLGD");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioLGD>("CreditTradingModel.FK_PortfolioLoss_Portfolio", "PortfolioLGD", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSimBinHist_Portfolio", "PortfolioSimBinHist")]
        public EntityCollection<PortfolioSimBinHist> PortfolioSimBinHists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioSimBinHist>("CreditTradingModel.FK_PortfolioSimBinHist_Portfolio", "PortfolioSimBinHist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioSimBinHist>("CreditTradingModel.FK_PortfolioSimBinHist_Portfolio", "PortfolioSimBinHist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSimResult_Portfolio", "PortfolioSimResult")]
        public EntityCollection<PortfolioSimResult> PortfolioSimResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioSimResult>("CreditTradingModel.FK_PortfolioSimResult_Portfolio", "PortfolioSimResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioSimResult>("CreditTradingModel.FK_PortfolioSimResult_Portfolio", "PortfolioSimResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSimulation_Portfolio", "PortfolioSimulation")]
        public EntityCollection<PortfolioSimulation> PortfolioSimulations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioSimulation>("CreditTradingModel.FK_PortfolioSimulation_Portfolio", "PortfolioSimulation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioSimulation>("CreditTradingModel.FK_PortfolioSimulation_Portfolio", "PortfolioSimulation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSubstitution_Portfolio", "PortfolioSubstitution")]
        public EntityCollection<PortfolioSubstitution> PortfolioSubstitutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioSubstitution>("CreditTradingModel.FK_PortfolioSubstitution_Portfolio", "PortfolioSubstitution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioSubstitution>("CreditTradingModel.FK_PortfolioSubstitution_Portfolio", "PortfolioSubstitution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioTranche_Portfolio", "PortfolioTranche")]
        public EntityCollection<PortfolioTranche> PortfolioTranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioTranche>("CreditTradingModel.FK_PortfolioTranche_Portfolio", "PortfolioTranche");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioTranche>("CreditTradingModel.FK_PortfolioTranche_Portfolio", "PortfolioTranche", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioTrancheLossBins_Portfolio", "PortfolioTrancheLossBins")]
        public EntityCollection<PortfolioTrancheLossBin> PortfolioTrancheLossBins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioTrancheLossBin>("CreditTradingModel.FK_PortfolioTrancheLossBins_Portfolio", "PortfolioTrancheLossBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioTrancheLossBin>("CreditTradingModel.FK_PortfolioTrancheLossBins_Portfolio", "PortfolioTrancheLossBins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioWARF_Portfolio", "PortfolioWARF")]
        public EntityCollection<PortfolioWARF> PortfolioWARves
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioWARF>("CreditTradingModel.FK_PortfolioWARF_Portfolio", "PortfolioWARF");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioWARF>("CreditTradingModel.FK_PortfolioWARF_Portfolio", "PortfolioWARF", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioWAS_Portfolio", "PortfolioWAS")]
        public EntityCollection<PortfolioWA> PortfolioWAS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioWA>("CreditTradingModel.FK_PortfolioWAS_Portfolio", "PortfolioWAS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioWA>("CreditTradingModel.FK_PortfolioWAS_Portfolio", "PortfolioWAS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_TrancheTrade_Portfolio", "TrancheTrade")]
        public EntityCollection<TrancheTrade> TrancheTrades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrancheTrade>("CreditTradingModel.FK_TrancheTrade_Portfolio", "TrancheTrade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrancheTrade>("CreditTradingModel.FK_TrancheTrade_Portfolio", "TrancheTrade", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "PortfolioTrades_FK00", "PortfolioTrades")]
        public EntityCollection<PortfolioTrade> PortfolioTrades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioTrade>("CreditTradingModel.PortfolioTrades_FK00", "PortfolioTrades");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioTrade>("CreditTradingModel.PortfolioTrades_FK00", "PortfolioTrades", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioCorrelation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioCorrelation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioCorrelation object.
        /// </summary>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="portfolio">Initial value of the Portfolio property.</param>
        /// <param name="maturity">Initial value of the Maturity property.</param>
        public static PortfolioCorrelation CreatePortfolioCorrelation(global::System.DateTime date, global::System.String portfolio, global::System.DateTime maturity)
        {
            PortfolioCorrelation portfolioCorrelation = new PortfolioCorrelation();
            portfolioCorrelation.Date = date;
            portfolioCorrelation.Portfolio = portfolio;
            portfolioCorrelation.Maturity = maturity;
            return portfolioCorrelation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                if (_Date != value)
                {
                    OnDateChanging(value);
                    ReportPropertyChanging("Date");
                    _Date = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Date");
                    OnDateChanged();
                }
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Portfolio
        {
            get
            {
                return _Portfolio;
            }
            set
            {
                if (_Portfolio != value)
                {
                    OnPortfolioChanging(value);
                    ReportPropertyChanging("Portfolio");
                    _Portfolio = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Portfolio");
                    OnPortfolioChanged();
                }
            }
        }
        private global::System.String _Portfolio;
        partial void OnPortfolioChanging(global::System.String value);
        partial void OnPortfolioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Maturity
        {
            get
            {
                return _Maturity;
            }
            set
            {
                if (_Maturity != value)
                {
                    OnMaturityChanging(value);
                    ReportPropertyChanging("Maturity");
                    _Maturity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Maturity");
                    OnMaturityChanged();
                }
            }
        }
        private global::System.DateTime _Maturity;
        partial void OnMaturityChanging(global::System.DateTime value);
        partial void OnMaturityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Point
        {
            get
            {
                return _Point;
            }
            set
            {
                OnPointChanging(value);
                ReportPropertyChanging("Point");
                _Point = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Point");
                OnPointChanged();
            }
        }
        private Nullable<global::System.Double> _Point;
        partial void OnPointChanging(Nullable<global::System.Double> value);
        partial void OnPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Correlation
        {
            get
            {
                return _Correlation;
            }
            set
            {
                OnCorrelationChanging(value);
                ReportPropertyChanging("Correlation");
                _Correlation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Correlation");
                OnCorrelationChanged();
            }
        }
        private Nullable<global::System.Double> _Correlation;
        partial void OnCorrelationChanging(Nullable<global::System.Double> value);
        partial void OnCorrelationChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioLGD")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioLGD : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioLGD object.
        /// </summary>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        /// <param name="tICKER">Initial value of the TICKER property.</param>
        /// <param name="creditEventDate">Initial value of the CreditEventDate property.</param>
        public static PortfolioLGD CreatePortfolioLGD(global::System.String portfolioName, global::System.String tICKER, global::System.DateTime creditEventDate)
        {
            PortfolioLGD portfolioLGD = new PortfolioLGD();
            portfolioLGD.PortfolioName = portfolioName;
            portfolioLGD.TICKER = tICKER;
            portfolioLGD.CreditEventDate = creditEventDate;
            return portfolioLGD;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TICKER
        {
            get
            {
                return _TICKER;
            }
            set
            {
                if (_TICKER != value)
                {
                    OnTICKERChanging(value);
                    ReportPropertyChanging("TICKER");
                    _TICKER = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TICKER");
                    OnTICKERChanged();
                }
            }
        }
        private global::System.String _TICKER;
        partial void OnTICKERChanging(global::System.String value);
        partial void OnTICKERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreditEventDate
        {
            get
            {
                return _CreditEventDate;
            }
            set
            {
                if (_CreditEventDate != value)
                {
                    OnCreditEventDateChanging(value);
                    ReportPropertyChanging("CreditEventDate");
                    _CreditEventDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreditEventDate");
                    OnCreditEventDateChanged();
                }
            }
        }
        private global::System.DateTime _CreditEventDate;
        partial void OnCreditEventDateChanging(global::System.DateTime value);
        partial void OnCreditEventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreditEventSettlement
        {
            get
            {
                return _CreditEventSettlement;
            }
            set
            {
                OnCreditEventSettlementChanging(value);
                ReportPropertyChanging("CreditEventSettlement");
                _CreditEventSettlement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditEventSettlement");
                OnCreditEventSettlementChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreditEventSettlement;
        partial void OnCreditEventSettlementChanging(Nullable<global::System.DateTime> value);
        partial void OnCreditEventSettlementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreditEvent
        {
            get
            {
                return _CreditEvent;
            }
            set
            {
                OnCreditEventChanging(value);
                ReportPropertyChanging("CreditEvent");
                _CreditEvent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreditEvent");
                OnCreditEventChanged();
            }
        }
        private global::System.String _CreditEvent;
        partial void OnCreditEventChanging(global::System.String value);
        partial void OnCreditEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortLGD
        {
            get
            {
                return _PortLGD;
            }
            set
            {
                OnPortLGDChanging(value);
                ReportPropertyChanging("PortLGD");
                _PortLGD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortLGD");
                OnPortLGDChanged();
            }
        }
        private Nullable<global::System.Double> _PortLGD;
        partial void OnPortLGDChanging(Nullable<global::System.Double> value);
        partial void OnPortLGDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortRR
        {
            get
            {
                return _PortRR;
            }
            set
            {
                OnPortRRChanging(value);
                ReportPropertyChanging("PortRR");
                _PortRR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortRR");
                OnPortRRChanged();
            }
        }
        private Nullable<global::System.Double> _PortRR;
        partial void OnPortRRChanging(Nullable<global::System.Double> value);
        partial void OnPortRRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortfolioPct
        {
            get
            {
                return _PortfolioPct;
            }
            set
            {
                OnPortfolioPctChanging(value);
                ReportPropertyChanging("PortfolioPct");
                _PortfolioPct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortfolioPct");
                OnPortfolioPctChanged();
            }
        }
        private Nullable<global::System.Double> _PortfolioPct;
        partial void OnPortfolioPctChanging(Nullable<global::System.Double> value);
        partial void OnPortfolioPctChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreditEventID
        {
            get
            {
                return _CreditEventID;
            }
            set
            {
                OnCreditEventIDChanging(value);
                ReportPropertyChanging("CreditEventID");
                _CreditEventID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreditEventID");
                OnCreditEventIDChanged();
            }
        }
        private global::System.String _CreditEventID;
        partial void OnCreditEventIDChanging(global::System.String value);
        partial void OnCreditEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortfolioLossNotes
        {
            get
            {
                return _PortfolioLossNotes;
            }
            set
            {
                OnPortfolioLossNotesChanging(value);
                ReportPropertyChanging("PortfolioLossNotes");
                _PortfolioLossNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortfolioLossNotes");
                OnPortfolioLossNotesChanged();
            }
        }
        private global::System.String _PortfolioLossNotes;
        partial void OnPortfolioLossNotesChanging(global::System.String value);
        partial void OnPortfolioLossNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioLoss_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioLoss_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioLoss_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioLoss_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioLoss_Portfolio", "Portfolio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioSimBinHist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioSimBinHist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioSimBinHist object.
        /// </summary>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        /// <param name="binDate">Initial value of the BinDate property.</param>
        /// <param name="binType">Initial value of the BinType property.</param>
        /// <param name="binOrdinal">Initial value of the BinOrdinal property.</param>
        public static PortfolioSimBinHist CreatePortfolioSimBinHist(global::System.String portfolioName, global::System.DateTime binDate, global::System.String binType, global::System.Int32 binOrdinal)
        {
            PortfolioSimBinHist portfolioSimBinHist = new PortfolioSimBinHist();
            portfolioSimBinHist.PortfolioName = portfolioName;
            portfolioSimBinHist.BinDate = binDate;
            portfolioSimBinHist.BinType = binType;
            portfolioSimBinHist.BinOrdinal = binOrdinal;
            return portfolioSimBinHist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BinDate
        {
            get
            {
                return _BinDate;
            }
            set
            {
                if (_BinDate != value)
                {
                    OnBinDateChanging(value);
                    ReportPropertyChanging("BinDate");
                    _BinDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BinDate");
                    OnBinDateChanged();
                }
            }
        }
        private global::System.DateTime _BinDate;
        partial void OnBinDateChanging(global::System.DateTime value);
        partial void OnBinDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BinType
        {
            get
            {
                return _BinType;
            }
            set
            {
                if (_BinType != value)
                {
                    OnBinTypeChanging(value);
                    ReportPropertyChanging("BinType");
                    _BinType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BinType");
                    OnBinTypeChanged();
                }
            }
        }
        private global::System.String _BinType;
        partial void OnBinTypeChanging(global::System.String value);
        partial void OnBinTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BinOrdinal
        {
            get
            {
                return _BinOrdinal;
            }
            set
            {
                if (_BinOrdinal != value)
                {
                    OnBinOrdinalChanging(value);
                    ReportPropertyChanging("BinOrdinal");
                    _BinOrdinal = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BinOrdinal");
                    OnBinOrdinalChanged();
                }
            }
        }
        private global::System.Int32 _BinOrdinal;
        partial void OnBinOrdinalChanging(global::System.Int32 value);
        partial void OnBinOrdinalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BinX
        {
            get
            {
                return _BinX;
            }
            set
            {
                OnBinXChanging(value);
                ReportPropertyChanging("BinX");
                _BinX = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BinX");
                OnBinXChanged();
            }
        }
        private global::System.String _BinX;
        partial void OnBinXChanging(global::System.String value);
        partial void OnBinXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BinY
        {
            get
            {
                return _BinY;
            }
            set
            {
                OnBinYChanging(value);
                ReportPropertyChanging("BinY");
                _BinY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BinY");
                OnBinYChanged();
            }
        }
        private Nullable<global::System.Double> _BinY;
        partial void OnBinYChanging(Nullable<global::System.Double> value);
        partial void OnBinYChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSimBinHist_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimBinHist_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimBinHist_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimBinHist_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimBinHist_Portfolio", "Portfolio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioSimResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioSimResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioSimResult object.
        /// </summary>
        /// <param name="simDate">Initial value of the SimDate property.</param>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        /// <param name="tranche">Initial value of the Tranche property.</param>
        public static PortfolioSimResult CreatePortfolioSimResult(global::System.DateTime simDate, global::System.String portfolioName, global::System.String tranche)
        {
            PortfolioSimResult portfolioSimResult = new PortfolioSimResult();
            portfolioSimResult.SimDate = simDate;
            portfolioSimResult.PortfolioName = portfolioName;
            portfolioSimResult.Tranche = tranche;
            return portfolioSimResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SimDate
        {
            get
            {
                return _SimDate;
            }
            set
            {
                if (_SimDate != value)
                {
                    OnSimDateChanging(value);
                    ReportPropertyChanging("SimDate");
                    _SimDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SimDate");
                    OnSimDateChanged();
                }
            }
        }
        private global::System.DateTime _SimDate;
        partial void OnSimDateChanging(global::System.DateTime value);
        partial void OnSimDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tranche
        {
            get
            {
                return _Tranche;
            }
            set
            {
                if (_Tranche != value)
                {
                    OnTrancheChanging(value);
                    ReportPropertyChanging("Tranche");
                    _Tranche = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Tranche");
                    OnTrancheChanged();
                }
            }
        }
        private global::System.String _Tranche;
        partial void OnTrancheChanging(global::System.String value);
        partial void OnTrancheChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortCorrelationFactor
        {
            get
            {
                return _PortCorrelationFactor;
            }
            set
            {
                OnPortCorrelationFactorChanging(value);
                ReportPropertyChanging("PortCorrelationFactor");
                _PortCorrelationFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortCorrelationFactor");
                OnPortCorrelationFactorChanged();
            }
        }
        private Nullable<global::System.Double> _PortCorrelationFactor;
        partial void OnPortCorrelationFactorChanging(Nullable<global::System.Double> value);
        partial void OnPortCorrelationFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortMeanLoss
        {
            get
            {
                return _PortMeanLoss;
            }
            set
            {
                OnPortMeanLossChanging(value);
                ReportPropertyChanging("PortMeanLoss");
                _PortMeanLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortMeanLoss");
                OnPortMeanLossChanged();
            }
        }
        private Nullable<global::System.Double> _PortMeanLoss;
        partial void OnPortMeanLossChanging(Nullable<global::System.Double> value);
        partial void OnPortMeanLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortStdDevLoss
        {
            get
            {
                return _PortStdDevLoss;
            }
            set
            {
                OnPortStdDevLossChanging(value);
                ReportPropertyChanging("PortStdDevLoss");
                _PortStdDevLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortStdDevLoss");
                OnPortStdDevLossChanged();
            }
        }
        private Nullable<global::System.Double> _PortStdDevLoss;
        partial void OnPortStdDevLossChanging(Nullable<global::System.Double> value);
        partial void OnPortStdDevLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TrancheAttach
        {
            get
            {
                return _TrancheAttach;
            }
            set
            {
                OnTrancheAttachChanging(value);
                ReportPropertyChanging("TrancheAttach");
                _TrancheAttach = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheAttach");
                OnTrancheAttachChanged();
            }
        }
        private Nullable<global::System.Double> _TrancheAttach;
        partial void OnTrancheAttachChanging(Nullable<global::System.Double> value);
        partial void OnTrancheAttachChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TranchZScore
        {
            get
            {
                return _TranchZScore;
            }
            set
            {
                OnTranchZScoreChanging(value);
                ReportPropertyChanging("TranchZScore");
                _TranchZScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranchZScore");
                OnTranchZScoreChanged();
            }
        }
        private Nullable<global::System.Double> _TranchZScore;
        partial void OnTranchZScoreChanging(Nullable<global::System.Double> value);
        partial void OnTranchZScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortSpread
        {
            get
            {
                return _PortSpread;
            }
            set
            {
                OnPortSpreadChanging(value);
                ReportPropertyChanging("PortSpread");
                _PortSpread = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortSpread");
                OnPortSpreadChanged();
            }
        }
        private Nullable<global::System.Double> _PortSpread;
        partial void OnPortSpreadChanging(Nullable<global::System.Double> value);
        partial void OnPortSpreadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortNotional
        {
            get
            {
                return _PortNotional;
            }
            set
            {
                OnPortNotionalChanging(value);
                ReportPropertyChanging("PortNotional");
                _PortNotional = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortNotional");
                OnPortNotionalChanged();
            }
        }
        private Nullable<global::System.Double> _PortNotional;
        partial void OnPortNotionalChanging(Nullable<global::System.Double> value);
        partial void OnPortNotionalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PortTradeCount
        {
            get
            {
                return _PortTradeCount;
            }
            set
            {
                OnPortTradeCountChanging(value);
                ReportPropertyChanging("PortTradeCount");
                _PortTradeCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortTradeCount");
                OnPortTradeCountChanged();
            }
        }
        private Nullable<global::System.Int32> _PortTradeCount;
        partial void OnPortTradeCountChanging(Nullable<global::System.Int32> value);
        partial void OnPortTradeCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortMaxLoss
        {
            get
            {
                return _PortMaxLoss;
            }
            set
            {
                OnPortMaxLossChanging(value);
                ReportPropertyChanging("PortMaxLoss");
                _PortMaxLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortMaxLoss");
                OnPortMaxLossChanged();
            }
        }
        private Nullable<global::System.Double> _PortMaxLoss;
        partial void OnPortMaxLossChanging(Nullable<global::System.Double> value);
        partial void OnPortMaxLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortWARR
        {
            get
            {
                return _PortWARR;
            }
            set
            {
                OnPortWARRChanging(value);
                ReportPropertyChanging("PortWARR");
                _PortWARR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortWARR");
                OnPortWARRChanged();
            }
        }
        private Nullable<global::System.Double> _PortWARR;
        partial void OnPortWARRChanging(Nullable<global::System.Double> value);
        partial void OnPortWARRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WARRMin
        {
            get
            {
                return _WARRMin;
            }
            set
            {
                OnWARRMinChanging(value);
                ReportPropertyChanging("WARRMin");
                _WARRMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WARRMin");
                OnWARRMinChanged();
            }
        }
        private Nullable<global::System.Double> _WARRMin;
        partial void OnWARRMinChanging(Nullable<global::System.Double> value);
        partial void OnWARRMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WARRMax
        {
            get
            {
                return _WARRMax;
            }
            set
            {
                OnWARRMaxChanging(value);
                ReportPropertyChanging("WARRMax");
                _WARRMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WARRMax");
                OnWARRMaxChanged();
            }
        }
        private Nullable<global::System.Double> _WARRMax;
        partial void OnWARRMaxChanging(Nullable<global::System.Double> value);
        partial void OnWARRMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TrancheWidth
        {
            get
            {
                return _TrancheWidth;
            }
            set
            {
                OnTrancheWidthChanging(value);
                ReportPropertyChanging("TrancheWidth");
                _TrancheWidth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheWidth");
                OnTrancheWidthChanged();
            }
        }
        private Nullable<global::System.Double> _TrancheWidth;
        partial void OnTrancheWidthChanging(Nullable<global::System.Double> value);
        partial void OnTrancheWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimDuration
        {
            get
            {
                return _SimDuration;
            }
            set
            {
                OnSimDurationChanging(value);
                ReportPropertyChanging("SimDuration");
                _SimDuration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimDuration");
                OnSimDurationChanged();
            }
        }
        private global::System.String _SimDuration;
        partial void OnSimDurationChanging(global::System.String value);
        partial void OnSimDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SimCount
        {
            get
            {
                return _SimCount;
            }
            set
            {
                OnSimCountChanging(value);
                ReportPropertyChanging("SimCount");
                _SimCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SimCount");
                OnSimCountChanged();
            }
        }
        private Nullable<global::System.Double> _SimCount;
        partial void OnSimCountChanging(Nullable<global::System.Double> value);
        partial void OnSimCountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSimResult_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimResult_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimResult_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimResult_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimResult_Portfolio", "Portfolio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioSimulation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioSimulation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioSimulation object.
        /// </summary>
        /// <param name="simID">Initial value of the SimID property.</param>
        public static PortfolioSimulation CreatePortfolioSimulation(global::System.Int32 simID)
        {
            PortfolioSimulation portfolioSimulation = new PortfolioSimulation();
            portfolioSimulation.SimID = simID;
            return portfolioSimulation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SimID
        {
            get
            {
                return _SimID;
            }
            set
            {
                if (_SimID != value)
                {
                    OnSimIDChanging(value);
                    ReportPropertyChanging("SimID");
                    _SimID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SimID");
                    OnSimIDChanged();
                }
            }
        }
        private global::System.Int32 _SimID;
        partial void OnSimIDChanging(global::System.Int32 value);
        partial void OnSimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                OnPortfolioNameChanging(value);
                ReportPropertyChanging("PortfolioName");
                _PortfolioName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortfolioName");
                OnPortfolioNameChanged();
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RevalDate
        {
            get
            {
                return _RevalDate;
            }
            set
            {
                OnRevalDateChanging(value);
                ReportPropertyChanging("RevalDate");
                _RevalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RevalDate");
                OnRevalDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RevalDate;
        partial void OnRevalDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRevalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SimulationDate
        {
            get
            {
                return _SimulationDate;
            }
            set
            {
                OnSimulationDateChanging(value);
                ReportPropertyChanging("SimulationDate");
                _SimulationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SimulationDate");
                OnSimulationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SimulationDate;
        partial void OnSimulationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSimulationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Correlation
        {
            get
            {
                return _Correlation;
            }
            set
            {
                OnCorrelationChanging(value);
                ReportPropertyChanging("Correlation");
                _Correlation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Correlation");
                OnCorrelationChanged();
            }
        }
        private Nullable<global::System.Double> _Correlation;
        partial void OnCorrelationChanging(Nullable<global::System.Double> value);
        partial void OnCorrelationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Draws
        {
            get
            {
                return _Draws;
            }
            set
            {
                OnDrawsChanging(value);
                ReportPropertyChanging("Draws");
                _Draws = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Draws");
                OnDrawsChanged();
            }
        }
        private Nullable<global::System.Int32> _Draws;
        partial void OnDrawsChanging(Nullable<global::System.Int32> value);
        partial void OnDrawsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimType
        {
            get
            {
                return _SimType;
            }
            set
            {
                OnSimTypeChanging(value);
                ReportPropertyChanging("SimType");
                _SimType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimType");
                OnSimTypeChanged();
            }
        }
        private global::System.String _SimType;
        partial void OnSimTypeChanging(global::System.String value);
        partial void OnSimTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSimulation_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimulation_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimulation_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimulation_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSimulation_Portfolio", "Portfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSimulationBins_PortfolioSimulation", "PortfolioSimulationBins")]
        public EntityCollection<PortfolioSimulationBin> PortfolioSimulationBins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioSimulationBin>("CreditTradingModel.FK_PortfolioSimulationBins_PortfolioSimulation", "PortfolioSimulationBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioSimulationBin>("CreditTradingModel.FK_PortfolioSimulationBins_PortfolioSimulation", "PortfolioSimulationBins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSimulationResult_PortfolioSimulation", "PortfolioSimulationResult")]
        public EntityCollection<PortfolioSimulationResult> PortfolioSimulationResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioSimulationResult>("CreditTradingModel.FK_PortfolioSimulationResult_PortfolioSimulation", "PortfolioSimulationResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioSimulationResult>("CreditTradingModel.FK_PortfolioSimulationResult_PortfolioSimulation", "PortfolioSimulationResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_TTPriceHist_PortfolioSimulation", "TTPriceHist")]
        public TTPriceHist TTPriceHist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TTPriceHist>("CreditTradingModel.FK_TTPriceHist_PortfolioSimulation", "TTPriceHist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TTPriceHist>("CreditTradingModel.FK_TTPriceHist_PortfolioSimulation", "TTPriceHist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TTPriceHist> TTPriceHistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TTPriceHist>("CreditTradingModel.FK_TTPriceHist_PortfolioSimulation", "TTPriceHist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TTPriceHist>("CreditTradingModel.FK_TTPriceHist_PortfolioSimulation", "TTPriceHist", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioSimulationBin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioSimulationBin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioSimulationBin object.
        /// </summary>
        /// <param name="simID">Initial value of the SimID property.</param>
        /// <param name="binType">Initial value of the BinType property.</param>
        /// <param name="binOrdinal">Initial value of the BinOrdinal property.</param>
        public static PortfolioSimulationBin CreatePortfolioSimulationBin(global::System.Int32 simID, global::System.String binType, global::System.Int32 binOrdinal)
        {
            PortfolioSimulationBin portfolioSimulationBin = new PortfolioSimulationBin();
            portfolioSimulationBin.SimID = simID;
            portfolioSimulationBin.BinType = binType;
            portfolioSimulationBin.BinOrdinal = binOrdinal;
            return portfolioSimulationBin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SimID
        {
            get
            {
                return _SimID;
            }
            set
            {
                if (_SimID != value)
                {
                    OnSimIDChanging(value);
                    ReportPropertyChanging("SimID");
                    _SimID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SimID");
                    OnSimIDChanged();
                }
            }
        }
        private global::System.Int32 _SimID;
        partial void OnSimIDChanging(global::System.Int32 value);
        partial void OnSimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BinType
        {
            get
            {
                return _BinType;
            }
            set
            {
                if (_BinType != value)
                {
                    OnBinTypeChanging(value);
                    ReportPropertyChanging("BinType");
                    _BinType = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BinType");
                    OnBinTypeChanged();
                }
            }
        }
        private global::System.String _BinType;
        partial void OnBinTypeChanging(global::System.String value);
        partial void OnBinTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BinOrdinal
        {
            get
            {
                return _BinOrdinal;
            }
            set
            {
                if (_BinOrdinal != value)
                {
                    OnBinOrdinalChanging(value);
                    ReportPropertyChanging("BinOrdinal");
                    _BinOrdinal = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BinOrdinal");
                    OnBinOrdinalChanged();
                }
            }
        }
        private global::System.Int32 _BinOrdinal;
        partial void OnBinOrdinalChanging(global::System.Int32 value);
        partial void OnBinOrdinalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BinX
        {
            get
            {
                return _BinX;
            }
            set
            {
                OnBinXChanging(value);
                ReportPropertyChanging("BinX");
                _BinX = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BinX");
                OnBinXChanged();
            }
        }
        private global::System.String _BinX;
        partial void OnBinXChanging(global::System.String value);
        partial void OnBinXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BinY
        {
            get
            {
                return _BinY;
            }
            set
            {
                OnBinYChanging(value);
                ReportPropertyChanging("BinY");
                _BinY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BinY");
                OnBinYChanged();
            }
        }
        private Nullable<global::System.Double> _BinY;
        partial void OnBinYChanging(Nullable<global::System.Double> value);
        partial void OnBinYChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSimulationBins_PortfolioSimulation", "PortfolioSimulation")]
        public PortfolioSimulation PortfolioSimulation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_PortfolioSimulationBins_PortfolioSimulation", "PortfolioSimulation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_PortfolioSimulationBins_PortfolioSimulation", "PortfolioSimulation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PortfolioSimulation> PortfolioSimulationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_PortfolioSimulationBins_PortfolioSimulation", "PortfolioSimulation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_PortfolioSimulationBins_PortfolioSimulation", "PortfolioSimulation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioSimulationResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioSimulationResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioSimulationResult object.
        /// </summary>
        /// <param name="simID">Initial value of the SimID property.</param>
        /// <param name="simDate">Initial value of the SimDate property.</param>
        public static PortfolioSimulationResult CreatePortfolioSimulationResult(global::System.Int32 simID, global::System.DateTime simDate)
        {
            PortfolioSimulationResult portfolioSimulationResult = new PortfolioSimulationResult();
            portfolioSimulationResult.SimID = simID;
            portfolioSimulationResult.SimDate = simDate;
            return portfolioSimulationResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SimID
        {
            get
            {
                return _SimID;
            }
            set
            {
                if (_SimID != value)
                {
                    OnSimIDChanging(value);
                    ReportPropertyChanging("SimID");
                    _SimID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SimID");
                    OnSimIDChanged();
                }
            }
        }
        private global::System.Int32 _SimID;
        partial void OnSimIDChanging(global::System.Int32 value);
        partial void OnSimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SimDate
        {
            get
            {
                return _SimDate;
            }
            set
            {
                if (_SimDate != value)
                {
                    OnSimDateChanging(value);
                    ReportPropertyChanging("SimDate");
                    _SimDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SimDate");
                    OnSimDateChanged();
                }
            }
        }
        private global::System.DateTime _SimDate;
        partial void OnSimDateChanging(global::System.DateTime value);
        partial void OnSimDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Correlation
        {
            get
            {
                return _Correlation;
            }
            set
            {
                OnCorrelationChanging(value);
                ReportPropertyChanging("Correlation");
                _Correlation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Correlation");
                OnCorrelationChanged();
            }
        }
        private Nullable<global::System.Double> _Correlation;
        partial void OnCorrelationChanging(Nullable<global::System.Double> value);
        partial void OnCorrelationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ExpectedLoss
        {
            get
            {
                return _ExpectedLoss;
            }
            set
            {
                OnExpectedLossChanging(value);
                ReportPropertyChanging("ExpectedLoss");
                _ExpectedLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedLoss");
                OnExpectedLossChanged();
            }
        }
        private Nullable<global::System.Double> _ExpectedLoss;
        partial void OnExpectedLossChanging(Nullable<global::System.Double> value);
        partial void OnExpectedLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> StdDev
        {
            get
            {
                return _StdDev;
            }
            set
            {
                OnStdDevChanging(value);
                ReportPropertyChanging("StdDev");
                _StdDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StdDev");
                OnStdDevChanged();
            }
        }
        private Nullable<global::System.Double> _StdDev;
        partial void OnStdDevChanging(Nullable<global::System.Double> value);
        partial void OnStdDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TrancheAttach
        {
            get
            {
                return _TrancheAttach;
            }
            set
            {
                OnTrancheAttachChanging(value);
                ReportPropertyChanging("TrancheAttach");
                _TrancheAttach = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheAttach");
                OnTrancheAttachChanged();
            }
        }
        private Nullable<global::System.Double> _TrancheAttach;
        partial void OnTrancheAttachChanging(Nullable<global::System.Double> value);
        partial void OnTrancheAttachChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TranchZScore
        {
            get
            {
                return _TranchZScore;
            }
            set
            {
                OnTranchZScoreChanging(value);
                ReportPropertyChanging("TranchZScore");
                _TranchZScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranchZScore");
                OnTranchZScoreChanged();
            }
        }
        private Nullable<global::System.Double> _TranchZScore;
        partial void OnTranchZScoreChanging(Nullable<global::System.Double> value);
        partial void OnTranchZScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WAS
        {
            get
            {
                return _WAS;
            }
            set
            {
                OnWASChanging(value);
                ReportPropertyChanging("WAS");
                _WAS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WAS");
                OnWASChanged();
            }
        }
        private Nullable<global::System.Double> _WAS;
        partial void OnWASChanging(Nullable<global::System.Double> value);
        partial void OnWASChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PctWeight
        {
            get
            {
                return _PctWeight;
            }
            set
            {
                OnPctWeightChanging(value);
                ReportPropertyChanging("PctWeight");
                _PctWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PctWeight");
                OnPctWeightChanged();
            }
        }
        private Nullable<global::System.Double> _PctWeight;
        partial void OnPctWeightChanging(Nullable<global::System.Double> value);
        partial void OnPctWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RECount
        {
            get
            {
                return _RECount;
            }
            set
            {
                OnRECountChanging(value);
                ReportPropertyChanging("RECount");
                _RECount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RECount");
                OnRECountChanged();
            }
        }
        private Nullable<global::System.Int32> _RECount;
        partial void OnRECountChanging(Nullable<global::System.Int32> value);
        partial void OnRECountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MaxLoss
        {
            get
            {
                return _MaxLoss;
            }
            set
            {
                OnMaxLossChanging(value);
                ReportPropertyChanging("MaxLoss");
                _MaxLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxLoss");
                OnMaxLossChanged();
            }
        }
        private Nullable<global::System.Double> _MaxLoss;
        partial void OnMaxLossChanging(Nullable<global::System.Double> value);
        partial void OnMaxLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WARR
        {
            get
            {
                return _WARR;
            }
            set
            {
                OnWARRChanging(value);
                ReportPropertyChanging("WARR");
                _WARR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WARR");
                OnWARRChanged();
            }
        }
        private Nullable<global::System.Double> _WARR;
        partial void OnWARRChanging(Nullable<global::System.Double> value);
        partial void OnWARRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WARRMin
        {
            get
            {
                return _WARRMin;
            }
            set
            {
                OnWARRMinChanging(value);
                ReportPropertyChanging("WARRMin");
                _WARRMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WARRMin");
                OnWARRMinChanged();
            }
        }
        private Nullable<global::System.Double> _WARRMin;
        partial void OnWARRMinChanging(Nullable<global::System.Double> value);
        partial void OnWARRMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WARRMax
        {
            get
            {
                return _WARRMax;
            }
            set
            {
                OnWARRMaxChanging(value);
                ReportPropertyChanging("WARRMax");
                _WARRMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WARRMax");
                OnWARRMaxChanged();
            }
        }
        private Nullable<global::System.Double> _WARRMax;
        partial void OnWARRMaxChanging(Nullable<global::System.Double> value);
        partial void OnWARRMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TrancheWidth
        {
            get
            {
                return _TrancheWidth;
            }
            set
            {
                OnTrancheWidthChanging(value);
                ReportPropertyChanging("TrancheWidth");
                _TrancheWidth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheWidth");
                OnTrancheWidthChanged();
            }
        }
        private Nullable<global::System.Double> _TrancheWidth;
        partial void OnTrancheWidthChanging(Nullable<global::System.Double> value);
        partial void OnTrancheWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimDuration
        {
            get
            {
                return _SimDuration;
            }
            set
            {
                OnSimDurationChanging(value);
                ReportPropertyChanging("SimDuration");
                _SimDuration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimDuration");
                OnSimDurationChanged();
            }
        }
        private global::System.String _SimDuration;
        partial void OnSimDurationChanging(global::System.String value);
        partial void OnSimDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Draws
        {
            get
            {
                return _Draws;
            }
            set
            {
                OnDrawsChanging(value);
                ReportPropertyChanging("Draws");
                _Draws = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Draws");
                OnDrawsChanged();
            }
        }
        private Nullable<global::System.Int32> _Draws;
        partial void OnDrawsChanging(Nullable<global::System.Int32> value);
        partial void OnDrawsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSimulationResult_PortfolioSimulation", "PortfolioSimulation")]
        public PortfolioSimulation PortfolioSimulation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_PortfolioSimulationResult_PortfolioSimulation", "PortfolioSimulation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_PortfolioSimulationResult_PortfolioSimulation", "PortfolioSimulation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PortfolioSimulation> PortfolioSimulationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_PortfolioSimulationResult_PortfolioSimulation", "PortfolioSimulation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_PortfolioSimulationResult_PortfolioSimulation", "PortfolioSimulation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioSubstitution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioSubstitution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioSubstitution object.
        /// </summary>
        /// <param name="portSubID">Initial value of the PortSubID property.</param>
        /// <param name="subDirection">Initial value of the SubDirection property.</param>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        /// <param name="nB">Initial value of the NB property.</param>
        public static PortfolioSubstitution CreatePortfolioSubstitution(global::System.Int32 portSubID, global::System.String subDirection, global::System.String portfolioName, global::System.Int32 nB)
        {
            PortfolioSubstitution portfolioSubstitution = new PortfolioSubstitution();
            portfolioSubstitution.PortSubID = portSubID;
            portfolioSubstitution.SubDirection = subDirection;
            portfolioSubstitution.PortfolioName = portfolioName;
            portfolioSubstitution.NB = nB;
            return portfolioSubstitution;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortSubID
        {
            get
            {
                return _PortSubID;
            }
            set
            {
                if (_PortSubID != value)
                {
                    OnPortSubIDChanging(value);
                    ReportPropertyChanging("PortSubID");
                    _PortSubID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PortSubID");
                    OnPortSubIDChanged();
                }
            }
        }
        private global::System.Int32 _PortSubID;
        partial void OnPortSubIDChanging(global::System.Int32 value);
        partial void OnPortSubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubDirection
        {
            get
            {
                return _SubDirection;
            }
            set
            {
                if (_SubDirection != value)
                {
                    OnSubDirectionChanging(value);
                    ReportPropertyChanging("SubDirection");
                    _SubDirection = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SubDirection");
                    OnSubDirectionChanged();
                }
            }
        }
        private global::System.String _SubDirection;
        partial void OnSubDirectionChanging(global::System.String value);
        partial void OnSubDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NB
        {
            get
            {
                return _NB;
            }
            set
            {
                if (_NB != value)
                {
                    OnNBChanging(value);
                    ReportPropertyChanging("NB");
                    _NB = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NB");
                    OnNBChanged();
                }
            }
        }
        private global::System.Int32 _NB;
        partial void OnNBChanging(global::System.Int32 value);
        partial void OnNBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TICKER
        {
            get
            {
                return _TICKER;
            }
            set
            {
                OnTICKERChanging(value);
                ReportPropertyChanging("TICKER");
                _TICKER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TICKER");
                OnTICKERChanged();
            }
        }
        private global::System.String _TICKER;
        partial void OnTICKERChanging(global::System.String value);
        partial void OnTICKERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CCY
        {
            get
            {
                return _CCY;
            }
            set
            {
                OnCCYChanging(value);
                ReportPropertyChanging("CCY");
                _CCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CCY");
                OnCCYChanged();
            }
        }
        private global::System.String _CCY;
        partial void OnCCYChanging(global::System.String value);
        partial void OnCCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SnrSub
        {
            get
            {
                return _SnrSub;
            }
            set
            {
                OnSnrSubChanging(value);
                ReportPropertyChanging("SnrSub");
                _SnrSub = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SnrSub");
                OnSnrSubChanged();
            }
        }
        private global::System.String _SnrSub;
        partial void OnSnrSubChanging(global::System.String value);
        partial void OnSnrSubChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterParty
        {
            get
            {
                return _CounterParty;
            }
            set
            {
                OnCounterPartyChanging(value);
                ReportPropertyChanging("CounterParty");
                _CounterParty = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterParty");
                OnCounterPartyChanged();
            }
        }
        private global::System.String _CounterParty;
        partial void OnCounterPartyChanging(global::System.String value);
        partial void OnCounterPartyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> NotionalAmount
        {
            get
            {
                return _NotionalAmount;
            }
            set
            {
                OnNotionalAmountChanging(value);
                ReportPropertyChanging("NotionalAmount");
                _NotionalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotionalAmount");
                OnNotionalAmountChanged();
            }
        }
        private Nullable<global::System.Double> _NotionalAmount;
        partial void OnNotionalAmountChanging(Nullable<global::System.Double> value);
        partial void OnNotionalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TradeDate
        {
            get
            {
                return _TradeDate;
            }
            set
            {
                OnTradeDateChanging(value);
                ReportPropertyChanging("TradeDate");
                _TradeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeDate");
                OnTradeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TradeDate;
        partial void OnTradeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTradeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MaturityDate
        {
            get
            {
                return _MaturityDate;
            }
            set
            {
                OnMaturityDateChanging(value);
                ReportPropertyChanging("MaturityDate");
                _MaturityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaturityDate");
                OnMaturityDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MaturityDate;
        partial void OnMaturityDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMaturityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDate;
        partial void OnExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DealRate
        {
            get
            {
                return _DealRate;
            }
            set
            {
                OnDealRateChanging(value);
                ReportPropertyChanging("DealRate");
                _DealRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealRate");
                OnDealRateChanged();
            }
        }
        private Nullable<global::System.Double> _DealRate;
        partial void OnDealRateChanging(Nullable<global::System.Double> value);
        partial void OnDealRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayRecv
        {
            get
            {
                return _PayRecv;
            }
            set
            {
                OnPayRecvChanging(value);
                ReportPropertyChanging("PayRecv");
                _PayRecv = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayRecv");
                OnPayRecvChanged();
            }
        }
        private global::System.String _PayRecv;
        partial void OnPayRecvChanging(global::System.String value);
        partial void OnPayRecvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Trader
        {
            get
            {
                return _Trader;
            }
            set
            {
                OnTraderChanging(value);
                ReportPropertyChanging("Trader");
                _Trader = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Trader");
                OnTraderChanged();
            }
        }
        private global::System.String _Trader;
        partial void OnTraderChanging(global::System.String value);
        partial void OnTraderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TradeStatus
        {
            get
            {
                return _TradeStatus;
            }
            set
            {
                OnTradeStatusChanging(value);
                ReportPropertyChanging("TradeStatus");
                _TradeStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TradeStatus");
                OnTradeStatusChanged();
            }
        }
        private global::System.String _TradeStatus;
        partial void OnTradeStatusChanging(global::System.String value);
        partial void OnTradeStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MTMRate
        {
            get
            {
                return _MTMRate;
            }
            set
            {
                OnMTMRateChanging(value);
                ReportPropertyChanging("MTMRate");
                _MTMRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MTMRate");
                OnMTMRateChanged();
            }
        }
        private Nullable<global::System.Double> _MTMRate;
        partial void OnMTMRateChanging(Nullable<global::System.Double> value);
        partial void OnMTMRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreditCurveID
        {
            get
            {
                return _CreditCurveID;
            }
            set
            {
                OnCreditCurveIDChanging(value);
                ReportPropertyChanging("CreditCurveID");
                _CreditCurveID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreditCurveID");
                OnCreditCurveIDChanged();
            }
        }
        private global::System.String _CreditCurveID;
        partial void OnCreditCurveIDChanging(global::System.String value);
        partial void OnCreditCurveIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> UpfrontPayment
        {
            get
            {
                return _UpfrontPayment;
            }
            set
            {
                OnUpfrontPaymentChanging(value);
                ReportPropertyChanging("UpfrontPayment");
                _UpfrontPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpfrontPayment");
                OnUpfrontPaymentChanged();
            }
        }
        private Nullable<global::System.Double> _UpfrontPayment;
        partial void OnUpfrontPaymentChanging(Nullable<global::System.Double> value);
        partial void OnUpfrontPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Recovery
        {
            get
            {
                return _Recovery;
            }
            set
            {
                OnRecoveryChanging(value);
                ReportPropertyChanging("Recovery");
                _Recovery = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recovery");
                OnRecoveryChanged();
            }
        }
        private Nullable<global::System.Double> _Recovery;
        partial void OnRecoveryChanging(Nullable<global::System.Double> value);
        partial void OnRecoveryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsFixedRR
        {
            get
            {
                return _IsFixedRR;
            }
            set
            {
                OnIsFixedRRChanging(value);
                ReportPropertyChanging("IsFixedRR");
                _IsFixedRR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFixedRR");
                OnIsFixedRRChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsFixedRR;
        partial void OnIsFixedRRChanging(Nullable<global::System.Boolean> value);
        partial void OnIsFixedRRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Completed;
        partial void OnCompletedChanging(Nullable<global::System.Boolean> value);
        partial void OnCompletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSubstitution_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSubstitution_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSubstitution_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSubstitution_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioSubstitution_Portfolio", "Portfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSubstitution_PortfolioSubstitutionHeader", "PortfolioSubstitutionHeader")]
        public PortfolioSubstitutionHeader PortfolioSubstitutionHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSubstitutionHeader>("CreditTradingModel.FK_PortfolioSubstitution_PortfolioSubstitutionHeader", "PortfolioSubstitutionHeader").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSubstitutionHeader>("CreditTradingModel.FK_PortfolioSubstitution_PortfolioSubstitutionHeader", "PortfolioSubstitutionHeader").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PortfolioSubstitutionHeader> PortfolioSubstitutionHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSubstitutionHeader>("CreditTradingModel.FK_PortfolioSubstitution_PortfolioSubstitutionHeader", "PortfolioSubstitutionHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PortfolioSubstitutionHeader>("CreditTradingModel.FK_PortfolioSubstitution_PortfolioSubstitutionHeader", "PortfolioSubstitutionHeader", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioSubstitutionHeader")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioSubstitutionHeader : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioSubstitutionHeader object.
        /// </summary>
        /// <param name="portSubID">Initial value of the PortSubID property.</param>
        public static PortfolioSubstitutionHeader CreatePortfolioSubstitutionHeader(global::System.Int32 portSubID)
        {
            PortfolioSubstitutionHeader portfolioSubstitutionHeader = new PortfolioSubstitutionHeader();
            portfolioSubstitutionHeader.PortSubID = portSubID;
            return portfolioSubstitutionHeader;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PortSubID
        {
            get
            {
                return _PortSubID;
            }
            set
            {
                if (_PortSubID != value)
                {
                    OnPortSubIDChanging(value);
                    ReportPropertyChanging("PortSubID");
                    _PortSubID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PortSubID");
                    OnPortSubIDChanged();
                }
            }
        }
        private global::System.Int32 _PortSubID;
        partial void OnPortSubIDChanging(global::System.Int32 value);
        partial void OnPortSubIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PortSubDate
        {
            get
            {
                return _PortSubDate;
            }
            set
            {
                OnPortSubDateChanging(value);
                ReportPropertyChanging("PortSubDate");
                _PortSubDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortSubDate");
                OnPortSubDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PortSubDate;
        partial void OnPortSubDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPortSubDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortSubDesc
        {
            get
            {
                return _PortSubDesc;
            }
            set
            {
                OnPortSubDescChanging(value);
                ReportPropertyChanging("PortSubDesc");
                _PortSubDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortSubDesc");
                OnPortSubDescChanged();
            }
        }
        private global::System.String _PortSubDesc;
        partial void OnPortSubDescChanging(global::System.String value);
        partial void OnPortSubDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortSubUser
        {
            get
            {
                return _PortSubUser;
            }
            set
            {
                OnPortSubUserChanging(value);
                ReportPropertyChanging("PortSubUser");
                _PortSubUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortSubUser");
                OnPortSubUserChanged();
            }
        }
        private global::System.String _PortSubUser;
        partial void OnPortSubUserChanging(global::System.String value);
        partial void OnPortSubUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirmCode
        {
            get
            {
                return _FirmCode;
            }
            set
            {
                OnFirmCodeChanging(value);
                ReportPropertyChanging("FirmCode");
                _FirmCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirmCode");
                OnFirmCodeChanged();
            }
        }
        private global::System.String _FirmCode;
        partial void OnFirmCodeChanging(global::System.String value);
        partial void OnFirmCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortSubSubordChange
        {
            get
            {
                return _PortSubSubordChange;
            }
            set
            {
                OnPortSubSubordChangeChanging(value);
                ReportPropertyChanging("PortSubSubordChange");
                _PortSubSubordChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortSubSubordChange");
                OnPortSubSubordChangeChanged();
            }
        }
        private Nullable<global::System.Double> _PortSubSubordChange;
        partial void OnPortSubSubordChangeChanging(Nullable<global::System.Double> value);
        partial void OnPortSubSubordChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PortSubSpreadChange
        {
            get
            {
                return _PortSubSpreadChange;
            }
            set
            {
                OnPortSubSpreadChangeChanging(value);
                ReportPropertyChanging("PortSubSpreadChange");
                _PortSubSpreadChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PortSubSpreadChange");
                OnPortSubSpreadChangeChanged();
            }
        }
        private Nullable<global::System.Double> _PortSubSpreadChange;
        partial void OnPortSubSpreadChangeChanging(Nullable<global::System.Double> value);
        partial void OnPortSubSpreadChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Completed
        {
            get
            {
                return _Completed;
            }
            set
            {
                OnCompletedChanging(value);
                ReportPropertyChanging("Completed");
                _Completed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Completed");
                OnCompletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Completed;
        partial void OnCompletedChanging(Nullable<global::System.Boolean> value);
        partial void OnCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCreditEvent
        {
            get
            {
                return _IsCreditEvent;
            }
            set
            {
                OnIsCreditEventChanging(value);
                ReportPropertyChanging("IsCreditEvent");
                _IsCreditEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCreditEvent");
                OnIsCreditEventChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCreditEvent;
        partial void OnIsCreditEventChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCreditEventChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioSubstitution_PortfolioSubstitutionHeader", "PortfolioSubstitution")]
        public EntityCollection<PortfolioSubstitution> PortfolioSubstitutions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioSubstitution>("CreditTradingModel.FK_PortfolioSubstitution_PortfolioSubstitutionHeader", "PortfolioSubstitution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioSubstitution>("CreditTradingModel.FK_PortfolioSubstitution_PortfolioSubstitutionHeader", "PortfolioSubstitution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioTrade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioTrade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioTrade object.
        /// </summary>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        /// <param name="nB">Initial value of the NB property.</param>
        public static PortfolioTrade CreatePortfolioTrade(global::System.String portfolioName, global::System.Int32 nB)
        {
            PortfolioTrade portfolioTrade = new PortfolioTrade();
            portfolioTrade.PortfolioName = portfolioName;
            portfolioTrade.NB = nB;
            return portfolioTrade;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NB
        {
            get
            {
                return _NB;
            }
            set
            {
                if (_NB != value)
                {
                    OnNBChanging(value);
                    ReportPropertyChanging("NB");
                    _NB = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NB");
                    OnNBChanged();
                }
            }
        }
        private global::System.Int32 _NB;
        partial void OnNBChanging(global::System.Int32 value);
        partial void OnNBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TICKER
        {
            get
            {
                return _TICKER;
            }
            set
            {
                OnTICKERChanging(value);
                ReportPropertyChanging("TICKER");
                _TICKER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TICKER");
                OnTICKERChanged();
            }
        }
        private global::System.String _TICKER;
        partial void OnTICKERChanging(global::System.String value);
        partial void OnTICKERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CCY
        {
            get
            {
                return _CCY;
            }
            set
            {
                OnCCYChanging(value);
                ReportPropertyChanging("CCY");
                _CCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CCY");
                OnCCYChanged();
            }
        }
        private global::System.String _CCY;
        partial void OnCCYChanging(global::System.String value);
        partial void OnCCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SnrSub
        {
            get
            {
                return _SnrSub;
            }
            set
            {
                OnSnrSubChanging(value);
                ReportPropertyChanging("SnrSub");
                _SnrSub = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SnrSub");
                OnSnrSubChanged();
            }
        }
        private global::System.String _SnrSub;
        partial void OnSnrSubChanging(global::System.String value);
        partial void OnSnrSubChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CounterParty
        {
            get
            {
                return _CounterParty;
            }
            set
            {
                OnCounterPartyChanging(value);
                ReportPropertyChanging("CounterParty");
                _CounterParty = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CounterParty");
                OnCounterPartyChanged();
            }
        }
        private global::System.String _CounterParty;
        partial void OnCounterPartyChanging(global::System.String value);
        partial void OnCounterPartyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> NotionalAmount
        {
            get
            {
                return _NotionalAmount;
            }
            set
            {
                OnNotionalAmountChanging(value);
                ReportPropertyChanging("NotionalAmount");
                _NotionalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotionalAmount");
                OnNotionalAmountChanged();
            }
        }
        private Nullable<global::System.Double> _NotionalAmount;
        partial void OnNotionalAmountChanging(Nullable<global::System.Double> value);
        partial void OnNotionalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TradeDate
        {
            get
            {
                return _TradeDate;
            }
            set
            {
                OnTradeDateChanging(value);
                ReportPropertyChanging("TradeDate");
                _TradeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeDate");
                OnTradeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TradeDate;
        partial void OnTradeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTradeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MaturityDate
        {
            get
            {
                return _MaturityDate;
            }
            set
            {
                OnMaturityDateChanging(value);
                ReportPropertyChanging("MaturityDate");
                _MaturityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaturityDate");
                OnMaturityDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MaturityDate;
        partial void OnMaturityDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMaturityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDate;
        partial void OnExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DealRate
        {
            get
            {
                return _DealRate;
            }
            set
            {
                OnDealRateChanging(value);
                ReportPropertyChanging("DealRate");
                _DealRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealRate");
                OnDealRateChanged();
            }
        }
        private Nullable<global::System.Double> _DealRate;
        partial void OnDealRateChanging(Nullable<global::System.Double> value);
        partial void OnDealRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PayRecv
        {
            get
            {
                return _PayRecv;
            }
            set
            {
                OnPayRecvChanging(value);
                ReportPropertyChanging("PayRecv");
                _PayRecv = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PayRecv");
                OnPayRecvChanged();
            }
        }
        private global::System.String _PayRecv;
        partial void OnPayRecvChanging(global::System.String value);
        partial void OnPayRecvChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Trader
        {
            get
            {
                return _Trader;
            }
            set
            {
                OnTraderChanging(value);
                ReportPropertyChanging("Trader");
                _Trader = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Trader");
                OnTraderChanged();
            }
        }
        private global::System.String _Trader;
        partial void OnTraderChanging(global::System.String value);
        partial void OnTraderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TradeStatus
        {
            get
            {
                return _TradeStatus;
            }
            set
            {
                OnTradeStatusChanging(value);
                ReportPropertyChanging("TradeStatus");
                _TradeStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TradeStatus");
                OnTradeStatusChanged();
            }
        }
        private global::System.String _TradeStatus;
        partial void OnTradeStatusChanging(global::System.String value);
        partial void OnTradeStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MTMRate
        {
            get
            {
                return _MTMRate;
            }
            set
            {
                OnMTMRateChanging(value);
                ReportPropertyChanging("MTMRate");
                _MTMRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MTMRate");
                OnMTMRateChanged();
            }
        }
        private Nullable<global::System.Double> _MTMRate;
        partial void OnMTMRateChanging(Nullable<global::System.Double> value);
        partial void OnMTMRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreditCurveID
        {
            get
            {
                return _CreditCurveID;
            }
            set
            {
                OnCreditCurveIDChanging(value);
                ReportPropertyChanging("CreditCurveID");
                _CreditCurveID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreditCurveID");
                OnCreditCurveIDChanged();
            }
        }
        private global::System.String _CreditCurveID;
        partial void OnCreditCurveIDChanging(global::System.String value);
        partial void OnCreditCurveIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> UpfrontPayment
        {
            get
            {
                return _UpfrontPayment;
            }
            set
            {
                OnUpfrontPaymentChanging(value);
                ReportPropertyChanging("UpfrontPayment");
                _UpfrontPayment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpfrontPayment");
                OnUpfrontPaymentChanged();
            }
        }
        private Nullable<global::System.Double> _UpfrontPayment;
        partial void OnUpfrontPaymentChanging(Nullable<global::System.Double> value);
        partial void OnUpfrontPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Recovery
        {
            get
            {
                return _Recovery;
            }
            set
            {
                OnRecoveryChanging(value);
                ReportPropertyChanging("Recovery");
                _Recovery = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recovery");
                OnRecoveryChanged();
            }
        }
        private Nullable<global::System.Double> _Recovery;
        partial void OnRecoveryChanging(Nullable<global::System.Double> value);
        partial void OnRecoveryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsFixedRR
        {
            get
            {
                return _IsFixedRR;
            }
            set
            {
                OnIsFixedRRChanging(value);
                ReportPropertyChanging("IsFixedRR");
                _IsFixedRR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFixedRR");
                OnIsFixedRRChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsFixedRR;
        partial void OnIsFixedRRChanging(Nullable<global::System.Boolean> value);
        partial void OnIsFixedRRChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "PortfolioTrades_FK00", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.PortfolioTrades_FK00", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.PortfolioTrades_FK00", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.PortfolioTrades_FK00", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.PortfolioTrades_FK00", "Portfolio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioTranche")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioTranche : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioTranche object.
        /// </summary>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        /// <param name="trancheName">Initial value of the TrancheName property.</param>
        public static PortfolioTranche CreatePortfolioTranche(global::System.String portfolioName, global::System.String trancheName)
        {
            PortfolioTranche portfolioTranche = new PortfolioTranche();
            portfolioTranche.PortfolioName = portfolioName;
            portfolioTranche.TrancheName = trancheName;
            return portfolioTranche;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrancheName
        {
            get
            {
                return _TrancheName;
            }
            set
            {
                if (_TrancheName != value)
                {
                    OnTrancheNameChanging(value);
                    ReportPropertyChanging("TrancheName");
                    _TrancheName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TrancheName");
                    OnTrancheNameChanged();
                }
            }
        }
        private global::System.String _TrancheName;
        partial void OnTrancheNameChanging(global::System.String value);
        partial void OnTrancheNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TrancheNotional
        {
            get
            {
                return _TrancheNotional;
            }
            set
            {
                OnTrancheNotionalChanging(value);
                ReportPropertyChanging("TrancheNotional");
                _TrancheNotional = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheNotional");
                OnTrancheNotionalChanged();
            }
        }
        private Nullable<global::System.Double> _TrancheNotional;
        partial void OnTrancheNotionalChanging(Nullable<global::System.Double> value);
        partial void OnTrancheNotionalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TrancheAttachment
        {
            get
            {
                return _TrancheAttachment;
            }
            set
            {
                OnTrancheAttachmentChanging(value);
                ReportPropertyChanging("TrancheAttachment");
                _TrancheAttachment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheAttachment");
                OnTrancheAttachmentChanged();
            }
        }
        private Nullable<global::System.Double> _TrancheAttachment;
        partial void OnTrancheAttachmentChanging(Nullable<global::System.Double> value);
        partial void OnTrancheAttachmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TrancheWidth
        {
            get
            {
                return _TrancheWidth;
            }
            set
            {
                OnTrancheWidthChanging(value);
                ReportPropertyChanging("TrancheWidth");
                _TrancheWidth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheWidth");
                OnTrancheWidthChanged();
            }
        }
        private Nullable<global::System.Double> _TrancheWidth;
        partial void OnTrancheWidthChanging(Nullable<global::System.Double> value);
        partial void OnTrancheWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TrancheFee
        {
            get
            {
                return _TrancheFee;
            }
            set
            {
                OnTrancheFeeChanging(value);
                ReportPropertyChanging("TrancheFee");
                _TrancheFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheFee");
                OnTrancheFeeChanged();
            }
        }
        private Nullable<global::System.Double> _TrancheFee;
        partial void OnTrancheFeeChanging(Nullable<global::System.Double> value);
        partial void OnTrancheFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TranchePremium
        {
            get
            {
                return _TranchePremium;
            }
            set
            {
                OnTranchePremiumChanging(value);
                ReportPropertyChanging("TranchePremium");
                _TranchePremium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranchePremium");
                OnTranchePremiumChanged();
            }
        }
        private Nullable<global::System.Double> _TranchePremium;
        partial void OnTranchePremiumChanging(Nullable<global::System.Double> value);
        partial void OnTranchePremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> TrancheActive
        {
            get
            {
                return _TrancheActive;
            }
            set
            {
                OnTrancheActiveChanging(value);
                ReportPropertyChanging("TrancheActive");
                _TrancheActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheActive");
                OnTrancheActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _TrancheActive;
        partial void OnTrancheActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnTrancheActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TranchePremiumBasis
        {
            get
            {
                return _TranchePremiumBasis;
            }
            set
            {
                OnTranchePremiumBasisChanging(value);
                ReportPropertyChanging("TranchePremiumBasis");
                _TranchePremiumBasis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TranchePremiumBasis");
                OnTranchePremiumBasisChanged();
            }
        }
        private global::System.String _TranchePremiumBasis;
        partial void OnTranchePremiumBasisChanging(global::System.String value);
        partial void OnTranchePremiumBasisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrancheMaturity
        {
            get
            {
                return _TrancheMaturity;
            }
            set
            {
                OnTrancheMaturityChanging(value);
                ReportPropertyChanging("TrancheMaturity");
                _TrancheMaturity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheMaturity");
                OnTrancheMaturityChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrancheMaturity;
        partial void OnTrancheMaturityChanging(Nullable<global::System.DateTime> value);
        partial void OnTrancheMaturityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TrancheRollPA
        {
            get
            {
                return _TrancheRollPA;
            }
            set
            {
                OnTrancheRollPAChanging(value);
                ReportPropertyChanging("TrancheRollPA");
                _TrancheRollPA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrancheRollPA");
                OnTrancheRollPAChanged();
            }
        }
        private Nullable<global::System.Int32> _TrancheRollPA;
        partial void OnTrancheRollPAChanging(Nullable<global::System.Int32> value);
        partial void OnTrancheRollPAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrancheCCY
        {
            get
            {
                return _TrancheCCY;
            }
            set
            {
                OnTrancheCCYChanging(value);
                ReportPropertyChanging("TrancheCCY");
                _TrancheCCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrancheCCY");
                OnTrancheCCYChanged();
            }
        }
        private global::System.String _TrancheCCY;
        partial void OnTrancheCCYChanging(global::System.String value);
        partial void OnTrancheCCYChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioTranche_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioTranche_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioTranche_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioTranche_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioTranche_Portfolio", "Portfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioTrancheLossBins_PortfolioTranche", "PortfolioTrancheLossBins")]
        public EntityCollection<PortfolioTrancheLossBin> PortfolioTrancheLossBins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PortfolioTrancheLossBin>("CreditTradingModel.FK_PortfolioTrancheLossBins_PortfolioTranche", "PortfolioTrancheLossBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PortfolioTrancheLossBin>("CreditTradingModel.FK_PortfolioTrancheLossBins_PortfolioTranche", "PortfolioTrancheLossBins", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioTrancheLossBin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioTrancheLossBin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioTrancheLossBin object.
        /// </summary>
        /// <param name="simDate">Initial value of the SimDate property.</param>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        /// <param name="trancheName">Initial value of the TrancheName property.</param>
        /// <param name="forwardDate">Initial value of the ForwardDate property.</param>
        public static PortfolioTrancheLossBin CreatePortfolioTrancheLossBin(global::System.DateTime simDate, global::System.String portfolioName, global::System.String trancheName, global::System.DateTime forwardDate)
        {
            PortfolioTrancheLossBin portfolioTrancheLossBin = new PortfolioTrancheLossBin();
            portfolioTrancheLossBin.SimDate = simDate;
            portfolioTrancheLossBin.PortfolioName = portfolioName;
            portfolioTrancheLossBin.TrancheName = trancheName;
            portfolioTrancheLossBin.ForwardDate = forwardDate;
            return portfolioTrancheLossBin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SimDate
        {
            get
            {
                return _SimDate;
            }
            set
            {
                if (_SimDate != value)
                {
                    OnSimDateChanging(value);
                    ReportPropertyChanging("SimDate");
                    _SimDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SimDate");
                    OnSimDateChanged();
                }
            }
        }
        private global::System.DateTime _SimDate;
        partial void OnSimDateChanging(global::System.DateTime value);
        partial void OnSimDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrancheName
        {
            get
            {
                return _TrancheName;
            }
            set
            {
                if (_TrancheName != value)
                {
                    OnTrancheNameChanging(value);
                    ReportPropertyChanging("TrancheName");
                    _TrancheName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TrancheName");
                    OnTrancheNameChanged();
                }
            }
        }
        private global::System.String _TrancheName;
        partial void OnTrancheNameChanging(global::System.String value);
        partial void OnTrancheNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ForwardDate
        {
            get
            {
                return _ForwardDate;
            }
            set
            {
                if (_ForwardDate != value)
                {
                    OnForwardDateChanging(value);
                    ReportPropertyChanging("ForwardDate");
                    _ForwardDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ForwardDate");
                    OnForwardDateChanged();
                }
            }
        }
        private global::System.DateTime _ForwardDate;
        partial void OnForwardDateChanging(global::System.DateTime value);
        partial void OnForwardDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountFactor
        {
            get
            {
                return _DiscountFactor;
            }
            set
            {
                OnDiscountFactorChanging(value);
                ReportPropertyChanging("DiscountFactor");
                _DiscountFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountFactor");
                OnDiscountFactorChanged();
            }
        }
        private Nullable<global::System.Double> _DiscountFactor;
        partial void OnDiscountFactorChanging(Nullable<global::System.Double> value);
        partial void OnDiscountFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CumulativeLoss
        {
            get
            {
                return _CumulativeLoss;
            }
            set
            {
                OnCumulativeLossChanging(value);
                ReportPropertyChanging("CumulativeLoss");
                _CumulativeLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeLoss");
                OnCumulativeLossChanged();
            }
        }
        private Nullable<global::System.Double> _CumulativeLoss;
        partial void OnCumulativeLossChanging(Nullable<global::System.Double> value);
        partial void OnCumulativeLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MarginalLoss
        {
            get
            {
                return _MarginalLoss;
            }
            set
            {
                OnMarginalLossChanging(value);
                ReportPropertyChanging("MarginalLoss");
                _MarginalLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarginalLoss");
                OnMarginalLossChanged();
            }
        }
        private Nullable<global::System.Double> _MarginalLoss;
        partial void OnMarginalLossChanging(Nullable<global::System.Double> value);
        partial void OnMarginalLossChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioTrancheLossBins_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioTrancheLossBins_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioTrancheLossBins_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioTrancheLossBins_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioTrancheLossBins_Portfolio", "Portfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioTrancheLossBins_PortfolioTranche", "PortfolioTranche")]
        public PortfolioTranche PortfolioTranche
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioTranche>("CreditTradingModel.FK_PortfolioTrancheLossBins_PortfolioTranche", "PortfolioTranche").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioTranche>("CreditTradingModel.FK_PortfolioTrancheLossBins_PortfolioTranche", "PortfolioTranche").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PortfolioTranche> PortfolioTrancheReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioTranche>("CreditTradingModel.FK_PortfolioTrancheLossBins_PortfolioTranche", "PortfolioTranche");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PortfolioTranche>("CreditTradingModel.FK_PortfolioTrancheLossBins_PortfolioTranche", "PortfolioTranche", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioType object.
        /// </summary>
        /// <param name="portfolio_Type">Initial value of the Portfolio_Type property.</param>
        public static PortfolioType CreatePortfolioType(global::System.String portfolio_Type)
        {
            PortfolioType portfolioType = new PortfolioType();
            portfolioType.Portfolio_Type = portfolio_Type;
            return portfolioType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Portfolio_Type
        {
            get
            {
                return _Portfolio_Type;
            }
            set
            {
                if (_Portfolio_Type != value)
                {
                    OnPortfolio_TypeChanging(value);
                    ReportPropertyChanging("Portfolio_Type");
                    _Portfolio_Type = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Portfolio_Type");
                    OnPortfolio_TypeChanged();
                }
            }
        }
        private global::System.String _Portfolio_Type;
        partial void OnPortfolio_TypeChanging(global::System.String value);
        partial void OnPortfolio_TypeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioWA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioWA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioWA object.
        /// </summary>
        /// <param name="evalDate">Initial value of the EvalDate property.</param>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        public static PortfolioWA CreatePortfolioWA(global::System.DateTime evalDate, global::System.String portfolioName)
        {
            PortfolioWA portfolioWA = new PortfolioWA();
            portfolioWA.EvalDate = evalDate;
            portfolioWA.PortfolioName = portfolioName;
            return portfolioWA;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EvalDate
        {
            get
            {
                return _EvalDate;
            }
            set
            {
                if (_EvalDate != value)
                {
                    OnEvalDateChanging(value);
                    ReportPropertyChanging("EvalDate");
                    _EvalDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EvalDate");
                    OnEvalDateChanged();
                }
            }
        }
        private global::System.DateTime _EvalDate;
        partial void OnEvalDateChanging(global::System.DateTime value);
        partial void OnEvalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WAS
        {
            get
            {
                return _WAS;
            }
            set
            {
                OnWASChanging(value);
                ReportPropertyChanging("WAS");
                _WAS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WAS");
                OnWASChanged();
            }
        }
        private Nullable<global::System.Double> _WAS;
        partial void OnWASChanging(Nullable<global::System.Double> value);
        partial void OnWASChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioWAS_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioWAS_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioWAS_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioWAS_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioWAS_Portfolio", "Portfolio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="PortfolioWARF")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PortfolioWARF : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PortfolioWARF object.
        /// </summary>
        /// <param name="evalDate">Initial value of the EvalDate property.</param>
        /// <param name="portfolioName">Initial value of the PortfolioName property.</param>
        /// <param name="agency">Initial value of the Agency property.</param>
        public static PortfolioWARF CreatePortfolioWARF(global::System.DateTime evalDate, global::System.String portfolioName, global::System.String agency)
        {
            PortfolioWARF portfolioWARF = new PortfolioWARF();
            portfolioWARF.EvalDate = evalDate;
            portfolioWARF.PortfolioName = portfolioName;
            portfolioWARF.Agency = agency;
            return portfolioWARF;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EvalDate
        {
            get
            {
                return _EvalDate;
            }
            set
            {
                if (_EvalDate != value)
                {
                    OnEvalDateChanging(value);
                    ReportPropertyChanging("EvalDate");
                    _EvalDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EvalDate");
                    OnEvalDateChanged();
                }
            }
        }
        private global::System.DateTime _EvalDate;
        partial void OnEvalDateChanging(global::System.DateTime value);
        partial void OnEvalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                if (_PortfolioName != value)
                {
                    OnPortfolioNameChanging(value);
                    ReportPropertyChanging("PortfolioName");
                    _PortfolioName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PortfolioName");
                    OnPortfolioNameChanged();
                }
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Agency
        {
            get
            {
                return _Agency;
            }
            set
            {
                if (_Agency != value)
                {
                    OnAgencyChanging(value);
                    ReportPropertyChanging("Agency");
                    _Agency = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Agency");
                    OnAgencyChanged();
                }
            }
        }
        private global::System.String _Agency;
        partial void OnAgencyChanging(global::System.String value);
        partial void OnAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> WARF
        {
            get
            {
                return _WARF;
            }
            set
            {
                OnWARFChanging(value);
                ReportPropertyChanging("WARF");
                _WARF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WARF");
                OnWARFChanged();
            }
        }
        private Nullable<global::System.Double> _WARF;
        partial void OnWARFChanging(Nullable<global::System.Double> value);
        partial void OnWARFChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_PortfolioWARF_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioWARF_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioWARF_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioWARF_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_PortfolioWARF_Portfolio", "Portfolio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="Security_Master")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Security_Master : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Security_Master object.
        /// </summary>
        /// <param name="cUSIP">Initial value of the CUSIP property.</param>
        /// <param name="security">Initial value of the Security property.</param>
        public static Security_Master CreateSecurity_Master(global::System.String cUSIP, global::System.String security)
        {
            Security_Master security_Master = new Security_Master();
            security_Master.CUSIP = cUSIP;
            security_Master.Security = security;
            return security_Master;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CUSIP
        {
            get
            {
                return _CUSIP;
            }
            set
            {
                if (_CUSIP != value)
                {
                    OnCUSIPChanging(value);
                    ReportPropertyChanging("CUSIP");
                    _CUSIP = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CUSIP");
                    OnCUSIPChanged();
                }
            }
        }
        private global::System.String _CUSIP;
        partial void OnCUSIPChanging(global::System.String value);
        partial void OnCUSIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Security
        {
            get
            {
                return _Security;
            }
            set
            {
                OnSecurityChanging(value);
                ReportPropertyChanging("Security");
                _Security = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Security");
                OnSecurityChanged();
            }
        }
        private global::System.String _Security;
        partial void OnSecurityChanging(global::System.String value);
        partial void OnSecurityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISSUER
        {
            get
            {
                return _ISSUER;
            }
            set
            {
                OnISSUERChanging(value);
                ReportPropertyChanging("ISSUER");
                _ISSUER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISSUER");
                OnISSUERChanged();
            }
        }
        private global::System.String _ISSUER;
        partial void OnISSUERChanging(global::System.String value);
        partial void OnISSUERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INTEXDealName
        {
            get
            {
                return _INTEXDealName;
            }
            set
            {
                OnINTEXDealNameChanging(value);
                ReportPropertyChanging("INTEXDealName");
                _INTEXDealName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INTEXDealName");
                OnINTEXDealNameChanged();
            }
        }
        private global::System.String _INTEXDealName;
        partial void OnINTEXDealNameChanging(global::System.String value);
        partial void OnINTEXDealNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Underwriter_Agent
        {
            get
            {
                return _Underwriter_Agent;
            }
            set
            {
                OnUnderwriter_AgentChanging(value);
                ReportPropertyChanging("Underwriter_Agent");
                _Underwriter_Agent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Underwriter_Agent");
                OnUnderwriter_AgentChanged();
            }
        }
        private global::System.String _Underwriter_Agent;
        partial void OnUnderwriter_AgentChanging(global::System.String value);
        partial void OnUnderwriter_AgentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Listing
        {
            get
            {
                return _Listing;
            }
            set
            {
                OnListingChanging(value);
                ReportPropertyChanging("Listing");
                _Listing = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Listing");
                OnListingChanged();
            }
        }
        private global::System.String _Listing;
        partial void OnListingChanging(global::System.String value);
        partial void OnListingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrusteeCode
        {
            get
            {
                return _TrusteeCode;
            }
            set
            {
                OnTrusteeCodeChanging(value);
                ReportPropertyChanging("TrusteeCode");
                _TrusteeCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrusteeCode");
                OnTrusteeCodeChanged();
            }
        }
        private global::System.String _TrusteeCode;
        partial void OnTrusteeCodeChanging(global::System.String value);
        partial void OnTrusteeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CMCode
        {
            get
            {
                return _CMCode;
            }
            set
            {
                OnCMCodeChanging(value);
                ReportPropertyChanging("CMCode");
                _CMCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CMCode");
                OnCMCodeChanged();
            }
        }
        private global::System.String _CMCode;
        partial void OnCMCodeChanging(global::System.String value);
        partial void OnCMCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CDOCollTotal
        {
            get
            {
                return _CDOCollTotal;
            }
            set
            {
                OnCDOCollTotalChanging(value);
                ReportPropertyChanging("CDOCollTotal");
                _CDOCollTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CDOCollTotal");
                OnCDOCollTotalChanged();
            }
        }
        private Nullable<global::System.Double> _CDOCollTotal;
        partial void OnCDOCollTotalChanging(Nullable<global::System.Double> value);
        partial void OnCDOCollTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReinvPeriod
        {
            get
            {
                return _ReinvPeriod;
            }
            set
            {
                OnReinvPeriodChanging(value);
                ReportPropertyChanging("ReinvPeriod");
                _ReinvPeriod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReinvPeriod");
                OnReinvPeriodChanged();
            }
        }
        private global::System.String _ReinvPeriod;
        partial void OnReinvPeriodChanging(global::System.String value);
        partial void OnReinvPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NonCall
        {
            get
            {
                return _NonCall;
            }
            set
            {
                OnNonCallChanging(value);
                ReportPropertyChanging("NonCall");
                _NonCall = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NonCall");
                OnNonCallChanged();
            }
        }
        private global::System.String _NonCall;
        partial void OnNonCallChanging(global::System.String value);
        partial void OnNonCallChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Settlement
        {
            get
            {
                return _Settlement;
            }
            set
            {
                OnSettlementChanging(value);
                ReportPropertyChanging("Settlement");
                _Settlement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Settlement");
                OnSettlementChanged();
            }
        }
        private Nullable<global::System.DateTime> _Settlement;
        partial void OnSettlementChanging(Nullable<global::System.DateTime> value);
        partial void OnSettlementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinalMaturity
        {
            get
            {
                return _FinalMaturity;
            }
            set
            {
                OnFinalMaturityChanging(value);
                ReportPropertyChanging("FinalMaturity");
                _FinalMaturity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinalMaturity");
                OnFinalMaturityChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinalMaturity;
        partial void OnFinalMaturityChanging(Nullable<global::System.DateTime> value);
        partial void OnFinalMaturityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WAL
        {
            get
            {
                return _WAL;
            }
            set
            {
                OnWALChanging(value);
                ReportPropertyChanging("WAL");
                _WAL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WAL");
                OnWALChanged();
            }
        }
        private global::System.String _WAL;
        partial void OnWALChanging(global::System.String value);
        partial void OnWALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Wrap
        {
            get
            {
                return _Wrap;
            }
            set
            {
                OnWrapChanging(value);
                ReportPropertyChanging("Wrap");
                _Wrap = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Wrap");
                OnWrapChanged();
            }
        }
        private global::System.String _Wrap;
        partial void OnWrapChanging(global::System.String value);
        partial void OnWrapChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountMargin
        {
            get
            {
                return _DiscountMargin;
            }
            set
            {
                OnDiscountMarginChanging(value);
                ReportPropertyChanging("DiscountMargin");
                _DiscountMargin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountMargin");
                OnDiscountMarginChanged();
            }
        }
        private Nullable<global::System.Double> _DiscountMargin;
        partial void OnDiscountMarginChanging(Nullable<global::System.Double> value);
        partial void OnDiscountMarginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IndexRate
        {
            get
            {
                return _IndexRate;
            }
            set
            {
                OnIndexRateChanging(value);
                ReportPropertyChanging("IndexRate");
                _IndexRate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IndexRate");
                OnIndexRateChanged();
            }
        }
        private global::System.String _IndexRate;
        partial void OnIndexRateChanging(global::System.String value);
        partial void OnIndexRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StructureNotes
        {
            get
            {
                return _StructureNotes;
            }
            set
            {
                OnStructureNotesChanging(value);
                ReportPropertyChanging("StructureNotes");
                _StructureNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StructureNotes");
                OnStructureNotesChanged();
            }
        }
        private global::System.String _StructureNotes;
        partial void OnStructureNotesChanging(global::System.String value);
        partial void OnStructureNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityRatings
        {
            get
            {
                return _SecurityRatings;
            }
            set
            {
                OnSecurityRatingsChanging(value);
                ReportPropertyChanging("SecurityRatings");
                _SecurityRatings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityRatings");
                OnSecurityRatingsChanged();
            }
        }
        private global::System.String _SecurityRatings;
        partial void OnSecurityRatingsChanging(global::System.String value);
        partial void OnSecurityRatingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityRatingsMoody
        {
            get
            {
                return _SecurityRatingsMoody;
            }
            set
            {
                OnSecurityRatingsMoodyChanging(value);
                ReportPropertyChanging("SecurityRatingsMoody");
                _SecurityRatingsMoody = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityRatingsMoody");
                OnSecurityRatingsMoodyChanged();
            }
        }
        private global::System.String _SecurityRatingsMoody;
        partial void OnSecurityRatingsMoodyChanging(global::System.String value);
        partial void OnSecurityRatingsMoodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityRatingsSP
        {
            get
            {
                return _SecurityRatingsSP;
            }
            set
            {
                OnSecurityRatingsSPChanging(value);
                ReportPropertyChanging("SecurityRatingsSP");
                _SecurityRatingsSP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityRatingsSP");
                OnSecurityRatingsSPChanged();
            }
        }
        private global::System.String _SecurityRatingsSP;
        partial void OnSecurityRatingsSPChanging(global::System.String value);
        partial void OnSecurityRatingsSPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityRatingsFitch
        {
            get
            {
                return _SecurityRatingsFitch;
            }
            set
            {
                OnSecurityRatingsFitchChanging(value);
                ReportPropertyChanging("SecurityRatingsFitch");
                _SecurityRatingsFitch = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityRatingsFitch");
                OnSecurityRatingsFitchChanged();
            }
        }
        private global::System.String _SecurityRatingsFitch;
        partial void OnSecurityRatingsFitchChanging(global::System.String value);
        partial void OnSecurityRatingsFitchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityHolding
        {
            get
            {
                return _SecurityHolding;
            }
            set
            {
                OnSecurityHoldingChanging(value);
                ReportPropertyChanging("SecurityHolding");
                _SecurityHolding = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityHolding");
                OnSecurityHoldingChanged();
            }
        }
        private global::System.String _SecurityHolding;
        partial void OnSecurityHoldingChanging(global::System.String value);
        partial void OnSecurityHoldingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityNotes
        {
            get
            {
                return _SecurityNotes;
            }
            set
            {
                OnSecurityNotesChanging(value);
                ReportPropertyChanging("SecurityNotes");
                _SecurityNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityNotes");
                OnSecurityNotesChanged();
            }
        }
        private global::System.String _SecurityNotes;
        partial void OnSecurityNotesChanging(global::System.String value);
        partial void OnSecurityNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SecurityAmortStatus
        {
            get
            {
                return _SecurityAmortStatus;
            }
            set
            {
                OnSecurityAmortStatusChanging(value);
                ReportPropertyChanging("SecurityAmortStatus");
                _SecurityAmortStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityAmortStatus");
                OnSecurityAmortStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _SecurityAmortStatus;
        partial void OnSecurityAmortStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnSecurityAmortStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityClass
        {
            get
            {
                return _SecurityClass;
            }
            set
            {
                OnSecurityClassChanging(value);
                ReportPropertyChanging("SecurityClass");
                _SecurityClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityClass");
                OnSecurityClassChanged();
            }
        }
        private global::System.String _SecurityClass;
        partial void OnSecurityClassChanging(global::System.String value);
        partial void OnSecurityClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CDOType
        {
            get
            {
                return _CDOType;
            }
            set
            {
                OnCDOTypeChanging(value);
                ReportPropertyChanging("CDOType");
                _CDOType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CDOType");
                OnCDOTypeChanged();
            }
        }
        private global::System.String _CDOType;
        partial void OnCDOTypeChanging(global::System.String value);
        partial void OnCDOTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityCollateral
        {
            get
            {
                return _SecurityCollateral;
            }
            set
            {
                OnSecurityCollateralChanging(value);
                ReportPropertyChanging("SecurityCollateral");
                _SecurityCollateral = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityCollateral");
                OnSecurityCollateralChanged();
            }
        }
        private global::System.String _SecurityCollateral;
        partial void OnSecurityCollateralChanging(global::System.String value);
        partial void OnSecurityCollateralChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityParentStructure
        {
            get
            {
                return _SecurityParentStructure;
            }
            set
            {
                OnSecurityParentStructureChanging(value);
                ReportPropertyChanging("SecurityParentStructure");
                _SecurityParentStructure = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityParentStructure");
                OnSecurityParentStructureChanged();
            }
        }
        private global::System.String _SecurityParentStructure;
        partial void OnSecurityParentStructureChanging(global::System.String value);
        partial void OnSecurityParentStructureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityQuality
        {
            get
            {
                return _SecurityQuality;
            }
            set
            {
                OnSecurityQualityChanging(value);
                ReportPropertyChanging("SecurityQuality");
                _SecurityQuality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityQuality");
                OnSecurityQualityChanged();
            }
        }
        private global::System.String _SecurityQuality;
        partial void OnSecurityQualityChanging(global::System.String value);
        partial void OnSecurityQualityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityStatus
        {
            get
            {
                return _SecurityStatus;
            }
            set
            {
                OnSecurityStatusChanging(value);
                ReportPropertyChanging("SecurityStatus");
                _SecurityStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityStatus");
                OnSecurityStatusChanged();
            }
        }
        private global::System.String _SecurityStatus;
        partial void OnSecurityStatusChanging(global::System.String value);
        partial void OnSecurityStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IntexCoverage
        {
            get
            {
                return _IntexCoverage;
            }
            set
            {
                OnIntexCoverageChanging(value);
                ReportPropertyChanging("IntexCoverage");
                _IntexCoverage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntexCoverage");
                OnIntexCoverageChanged();
            }
        }
        private Nullable<global::System.Boolean> _IntexCoverage;
        partial void OnIntexCoverageChanging(Nullable<global::System.Boolean> value);
        partial void OnIntexCoverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IntexPermission
        {
            get
            {
                return _IntexPermission;
            }
            set
            {
                OnIntexPermissionChanging(value);
                ReportPropertyChanging("IntexPermission");
                _IntexPermission = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntexPermission");
                OnIntexPermissionChanged();
            }
        }
        private Nullable<global::System.Boolean> _IntexPermission;
        partial void OnIntexPermissionChanging(Nullable<global::System.Boolean> value);
        partial void OnIntexPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IntexDate
        {
            get
            {
                return _IntexDate;
            }
            set
            {
                OnIntexDateChanging(value);
                ReportPropertyChanging("IntexDate");
                _IntexDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntexDate");
                OnIntexDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IntexDate;
        partial void OnIntexDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIntexDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IntexBETRating
        {
            get
            {
                return _IntexBETRating;
            }
            set
            {
                OnIntexBETRatingChanging(value);
                ReportPropertyChanging("IntexBETRating");
                _IntexBETRating = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IntexBETRating");
                OnIntexBETRatingChanged();
            }
        }
        private global::System.String _IntexBETRating;
        partial void OnIntexBETRatingChanging(global::System.String value);
        partial void OnIntexBETRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataLoc
        {
            get
            {
                return _DataLoc;
            }
            set
            {
                OnDataLocChanging(value);
                ReportPropertyChanging("DataLoc");
                _DataLoc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataLoc");
                OnDataLocChanged();
            }
        }
        private global::System.String _DataLoc;
        partial void OnDataLocChanging(global::System.String value);
        partial void OnDataLocChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MIProvider
        {
            get
            {
                return _MIProvider;
            }
            set
            {
                OnMIProviderChanging(value);
                ReportPropertyChanging("MIProvider");
                _MIProvider = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MIProvider");
                OnMIProviderChanged();
            }
        }
        private global::System.String _MIProvider;
        partial void OnMIProviderChanging(global::System.String value);
        partial void OnMIProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Servicer
        {
            get
            {
                return _Servicer;
            }
            set
            {
                OnServicerChanging(value);
                ReportPropertyChanging("Servicer");
                _Servicer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Servicer");
                OnServicerChanged();
            }
        }
        private global::System.String _Servicer;
        partial void OnServicerChanging(global::System.String value);
        partial void OnServicerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PREPAY_RATE
        {
            get
            {
                return _PREPAY_RATE;
            }
            set
            {
                OnPREPAY_RATEChanging(value);
                ReportPropertyChanging("PREPAY_RATE");
                _PREPAY_RATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PREPAY_RATE");
                OnPREPAY_RATEChanged();
            }
        }
        private Nullable<global::System.Int32> _PREPAY_RATE;
        partial void OnPREPAY_RATEChanging(Nullable<global::System.Int32> value);
        partial void OnPREPAY_RATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PREPAY_UNITS
        {
            get
            {
                return _PREPAY_UNITS;
            }
            set
            {
                OnPREPAY_UNITSChanging(value);
                ReportPropertyChanging("PREPAY_UNITS");
                _PREPAY_UNITS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PREPAY_UNITS");
                OnPREPAY_UNITSChanged();
            }
        }
        private global::System.String _PREPAY_UNITS;
        partial void OnPREPAY_UNITSChanging(global::System.String value);
        partial void OnPREPAY_UNITSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TICKER
        {
            get
            {
                return _TICKER;
            }
            set
            {
                OnTICKERChanging(value);
                ReportPropertyChanging("TICKER");
                _TICKER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TICKER");
                OnTICKERChanged();
            }
        }
        private global::System.String _TICKER;
        partial void OnTICKERChanging(global::System.String value);
        partial void OnTICKERChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BBGMTK
        {
            get
            {
                return _BBGMTK;
            }
            set
            {
                OnBBGMTKChanging(value);
                ReportPropertyChanging("BBGMTK");
                _BBGMTK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BBGMTK");
                OnBBGMTKChanged();
            }
        }
        private global::System.String _BBGMTK;
        partial void OnBBGMTKChanging(global::System.String value);
        partial void OnBBGMTKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dealname
        {
            get
            {
                return _Dealname;
            }
            set
            {
                OnDealnameChanging(value);
                ReportPropertyChanging("Dealname");
                _Dealname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dealname");
                OnDealnameChanged();
            }
        }
        private global::System.String _Dealname;
        partial void OnDealnameChanging(global::System.String value);
        partial void OnDealnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ABSEvalCurveKey
        {
            get
            {
                return _ABSEvalCurveKey;
            }
            set
            {
                OnABSEvalCurveKeyChanging(value);
                ReportPropertyChanging("ABSEvalCurveKey");
                _ABSEvalCurveKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ABSEvalCurveKey");
                OnABSEvalCurveKeyChanged();
            }
        }
        private global::System.String _ABSEvalCurveKey;
        partial void OnABSEvalCurveKeyChanging(global::System.String value);
        partial void OnABSEvalCurveKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> RiskyBond
        {
            get
            {
                return _RiskyBond;
            }
            set
            {
                OnRiskyBondChanging(value);
                ReportPropertyChanging("RiskyBond");
                _RiskyBond = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskyBond");
                OnRiskyBondChanged();
            }
        }
        private Nullable<global::System.Boolean> _RiskyBond;
        partial void OnRiskyBondChanging(Nullable<global::System.Boolean> value);
        partial void OnRiskyBondChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="TrancheTrade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrancheTrade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrancheTrade object.
        /// </summary>
        /// <param name="tTNo">Initial value of the TTNo property.</param>
        public static TrancheTrade CreateTrancheTrade(global::System.Int32 tTNo)
        {
            TrancheTrade trancheTrade = new TrancheTrade();
            trancheTrade.TTNo = tTNo;
            return trancheTrade;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TTNo
        {
            get
            {
                return _TTNo;
            }
            set
            {
                if (_TTNo != value)
                {
                    OnTTNoChanging(value);
                    ReportPropertyChanging("TTNo");
                    _TTNo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TTNo");
                    OnTTNoChanged();
                }
            }
        }
        private global::System.Int32 _TTNo;
        partial void OnTTNoChanging(global::System.Int32 value);
        partial void OnTTNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PortfolioName
        {
            get
            {
                return _PortfolioName;
            }
            set
            {
                OnPortfolioNameChanging(value);
                ReportPropertyChanging("PortfolioName");
                _PortfolioName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PortfolioName");
                OnPortfolioNameChanged();
            }
        }
        private global::System.String _PortfolioName;
        partial void OnPortfolioNameChanging(global::System.String value);
        partial void OnPortfolioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrancheName
        {
            get
            {
                return _TrancheName;
            }
            set
            {
                OnTrancheNameChanging(value);
                ReportPropertyChanging("TrancheName");
                _TrancheName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrancheName");
                OnTrancheNameChanged();
            }
        }
        private global::System.String _TrancheName;
        partial void OnTrancheNameChanging(global::System.String value);
        partial void OnTrancheNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Notional
        {
            get
            {
                return _Notional;
            }
            set
            {
                OnNotionalChanging(value);
                ReportPropertyChanging("Notional");
                _Notional = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notional");
                OnNotionalChanged();
            }
        }
        private Nullable<global::System.Double> _Notional;
        partial void OnNotionalChanging(Nullable<global::System.Double> value);
        partial void OnNotionalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TradeDate
        {
            get
            {
                return _TradeDate;
            }
            set
            {
                OnTradeDateChanging(value);
                ReportPropertyChanging("TradeDate");
                _TradeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradeDate");
                OnTradeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TradeDate;
        partial void OnTradeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTradeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SettlementDate
        {
            get
            {
                return _SettlementDate;
            }
            set
            {
                OnSettlementDateChanging(value);
                ReportPropertyChanging("SettlementDate");
                _SettlementDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SettlementDate");
                OnSettlementDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SettlementDate;
        partial void OnSettlementDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSettlementDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Maturity
        {
            get
            {
                return _Maturity;
            }
            set
            {
                OnMaturityChanging(value);
                ReportPropertyChanging("Maturity");
                _Maturity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Maturity");
                OnMaturityChanged();
            }
        }
        private Nullable<global::System.DateTime> _Maturity;
        partial void OnMaturityChanging(Nullable<global::System.DateTime> value);
        partial void OnMaturityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Attachment
        {
            get
            {
                return _Attachment;
            }
            set
            {
                OnAttachmentChanging(value);
                ReportPropertyChanging("Attachment");
                _Attachment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Attachment");
                OnAttachmentChanged();
            }
        }
        private Nullable<global::System.Double> _Attachment;
        partial void OnAttachmentChanging(Nullable<global::System.Double> value);
        partial void OnAttachmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Double> _Width;
        partial void OnWidthChanging(Nullable<global::System.Double> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Premium
        {
            get
            {
                return _Premium;
            }
            set
            {
                OnPremiumChanging(value);
                ReportPropertyChanging("Premium");
                _Premium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Premium");
                OnPremiumChanged();
            }
        }
        private Nullable<global::System.Double> _Premium;
        partial void OnPremiumChanging(Nullable<global::System.Double> value);
        partial void OnPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PremBasis
        {
            get
            {
                return _PremBasis;
            }
            set
            {
                OnPremBasisChanging(value);
                ReportPropertyChanging("PremBasis");
                _PremBasis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PremBasis");
                OnPremBasisChanged();
            }
        }
        private global::System.String _PremBasis;
        partial void OnPremBasisChanging(global::System.String value);
        partial void OnPremBasisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PremPmtPA
        {
            get
            {
                return _PremPmtPA;
            }
            set
            {
                OnPremPmtPAChanging(value);
                ReportPropertyChanging("PremPmtPA");
                _PremPmtPA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PremPmtPA");
                OnPremPmtPAChanged();
            }
        }
        private Nullable<global::System.Int32> _PremPmtPA;
        partial void OnPremPmtPAChanging(Nullable<global::System.Int32> value);
        partial void OnPremPmtPAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ratings
        {
            get
            {
                return _Ratings;
            }
            set
            {
                OnRatingsChanging(value);
                ReportPropertyChanging("Ratings");
                _Ratings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ratings");
                OnRatingsChanged();
            }
        }
        private global::System.String _Ratings;
        partial void OnRatingsChanging(global::System.String value);
        partial void OnRatingsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Fee
        {
            get
            {
                return _Fee;
            }
            set
            {
                OnFeeChanging(value);
                ReportPropertyChanging("Fee");
                _Fee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fee");
                OnFeeChanged();
            }
        }
        private Nullable<global::System.Double> _Fee;
        partial void OnFeeChanging(Nullable<global::System.Double> value);
        partial void OnFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CCY
        {
            get
            {
                return _CCY;
            }
            set
            {
                OnCCYChanging(value);
                ReportPropertyChanging("CCY");
                _CCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CCY");
                OnCCYChanged();
            }
        }
        private global::System.String _CCY;
        partial void OnCCYChanging(global::System.String value);
        partial void OnCCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsFunded
        {
            get
            {
                return _IsFunded;
            }
            set
            {
                OnIsFundedChanging(value);
                ReportPropertyChanging("IsFunded");
                _IsFunded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFunded");
                OnIsFundedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsFunded;
        partial void OnIsFundedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsFundedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityID
        {
            get
            {
                return _SecurityID;
            }
            set
            {
                OnSecurityIDChanging(value);
                ReportPropertyChanging("SecurityID");
                _SecurityID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityID");
                OnSecurityIDChanged();
            }
        }
        private global::System.String _SecurityID;
        partial void OnSecurityIDChanging(global::System.String value);
        partial void OnSecurityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Orig_Notional
        {
            get
            {
                return _Orig_Notional;
            }
            set
            {
                OnOrig_NotionalChanging(value);
                ReportPropertyChanging("Orig_Notional");
                _Orig_Notional = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Orig_Notional");
                OnOrig_NotionalChanged();
            }
        }
        private Nullable<global::System.Double> _Orig_Notional;
        partial void OnOrig_NotionalChanging(Nullable<global::System.Double> value);
        partial void OnOrig_NotionalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Orig_Attach
        {
            get
            {
                return _Orig_Attach;
            }
            set
            {
                OnOrig_AttachChanging(value);
                ReportPropertyChanging("Orig_Attach");
                _Orig_Attach = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Orig_Attach");
                OnOrig_AttachChanged();
            }
        }
        private Nullable<global::System.Double> _Orig_Attach;
        partial void OnOrig_AttachChanging(Nullable<global::System.Double> value);
        partial void OnOrig_AttachChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Orig_Width
        {
            get
            {
                return _Orig_Width;
            }
            set
            {
                OnOrig_WidthChanging(value);
                ReportPropertyChanging("Orig_Width");
                _Orig_Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Orig_Width");
                OnOrig_WidthChanged();
            }
        }
        private Nullable<global::System.Double> _Orig_Width;
        partial void OnOrig_WidthChanging(Nullable<global::System.Double> value);
        partial void OnOrig_WidthChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_TrancheTrade_Portfolio", "Portfolio")]
        public Portfolio Portfolio1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_TrancheTrade_Portfolio", "Portfolio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_TrancheTrade_Portfolio", "Portfolio").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Portfolio> Portfolio1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Portfolio>("CreditTradingModel.FK_TrancheTrade_Portfolio", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Portfolio>("CreditTradingModel.FK_TrancheTrade_Portfolio", "Portfolio", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_TrancheTradeLossBins_TrancheTrade", "TrancheTradeLossBins")]
        public EntityCollection<TrancheTradeLossBin> TrancheTradeLossBins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrancheTradeLossBin>("CreditTradingModel.FK_TrancheTradeLossBins_TrancheTrade", "TrancheTradeLossBins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrancheTradeLossBin>("CreditTradingModel.FK_TrancheTradeLossBins_TrancheTrade", "TrancheTradeLossBins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_TTRevalInput_TrancheTrade", "TTRevalInput")]
        public EntityCollection<TTRevalInput> TTRevalInputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TTRevalInput>("CreditTradingModel.FK_TTRevalInput_TrancheTrade", "TTRevalInput");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TTRevalInput>("CreditTradingModel.FK_TTRevalInput_TrancheTrade", "TTRevalInput", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="TrancheTradeList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrancheTradeList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrancheTradeList object.
        /// </summary>
        /// <param name="tTListName">Initial value of the TTListName property.</param>
        public static TrancheTradeList CreateTrancheTradeList(global::System.String tTListName)
        {
            TrancheTradeList trancheTradeList = new TrancheTradeList();
            trancheTradeList.TTListName = tTListName;
            return trancheTradeList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TTListName
        {
            get
            {
                return _TTListName;
            }
            set
            {
                if (_TTListName != value)
                {
                    OnTTListNameChanging(value);
                    ReportPropertyChanging("TTListName");
                    _TTListName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TTListName");
                    OnTTListNameChanged();
                }
            }
        }
        private global::System.String _TTListName;
        partial void OnTTListNameChanging(global::System.String value);
        partial void OnTTListNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDefault;
        partial void OnIsDefaultChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDefaultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_TTRevalInput_TTList", "TTRevalInput")]
        public EntityCollection<TTRevalInput> TTRevalInputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TTRevalInput>("CreditTradingModel.FK_TTRevalInput_TTList", "TTRevalInput");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TTRevalInput>("CreditTradingModel.FK_TTRevalInput_TTList", "TTRevalInput", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="TrancheTradeLossBin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrancheTradeLossBin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrancheTradeLossBin object.
        /// </summary>
        /// <param name="simDate">Initial value of the SimDate property.</param>
        /// <param name="tTNo">Initial value of the TTNo property.</param>
        /// <param name="forwardDate">Initial value of the ForwardDate property.</param>
        public static TrancheTradeLossBin CreateTrancheTradeLossBin(global::System.DateTime simDate, global::System.Int32 tTNo, global::System.DateTime forwardDate)
        {
            TrancheTradeLossBin trancheTradeLossBin = new TrancheTradeLossBin();
            trancheTradeLossBin.SimDate = simDate;
            trancheTradeLossBin.TTNo = tTNo;
            trancheTradeLossBin.ForwardDate = forwardDate;
            return trancheTradeLossBin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SimDate
        {
            get
            {
                return _SimDate;
            }
            set
            {
                if (_SimDate != value)
                {
                    OnSimDateChanging(value);
                    ReportPropertyChanging("SimDate");
                    _SimDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SimDate");
                    OnSimDateChanged();
                }
            }
        }
        private global::System.DateTime _SimDate;
        partial void OnSimDateChanging(global::System.DateTime value);
        partial void OnSimDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TTNo
        {
            get
            {
                return _TTNo;
            }
            set
            {
                if (_TTNo != value)
                {
                    OnTTNoChanging(value);
                    ReportPropertyChanging("TTNo");
                    _TTNo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TTNo");
                    OnTTNoChanged();
                }
            }
        }
        private global::System.Int32 _TTNo;
        partial void OnTTNoChanging(global::System.Int32 value);
        partial void OnTTNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ForwardDate
        {
            get
            {
                return _ForwardDate;
            }
            set
            {
                if (_ForwardDate != value)
                {
                    OnForwardDateChanging(value);
                    ReportPropertyChanging("ForwardDate");
                    _ForwardDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ForwardDate");
                    OnForwardDateChanged();
                }
            }
        }
        private global::System.DateTime _ForwardDate;
        partial void OnForwardDateChanging(global::System.DateTime value);
        partial void OnForwardDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> DiscountFactor
        {
            get
            {
                return _DiscountFactor;
            }
            set
            {
                OnDiscountFactorChanging(value);
                ReportPropertyChanging("DiscountFactor");
                _DiscountFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiscountFactor");
                OnDiscountFactorChanged();
            }
        }
        private Nullable<global::System.Double> _DiscountFactor;
        partial void OnDiscountFactorChanging(Nullable<global::System.Double> value);
        partial void OnDiscountFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CumulativeLoss
        {
            get
            {
                return _CumulativeLoss;
            }
            set
            {
                OnCumulativeLossChanging(value);
                ReportPropertyChanging("CumulativeLoss");
                _CumulativeLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CumulativeLoss");
                OnCumulativeLossChanged();
            }
        }
        private Nullable<global::System.Double> _CumulativeLoss;
        partial void OnCumulativeLossChanging(Nullable<global::System.Double> value);
        partial void OnCumulativeLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MarginalLoss
        {
            get
            {
                return _MarginalLoss;
            }
            set
            {
                OnMarginalLossChanging(value);
                ReportPropertyChanging("MarginalLoss");
                _MarginalLoss = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarginalLoss");
                OnMarginalLossChanged();
            }
        }
        private Nullable<global::System.Double> _MarginalLoss;
        partial void OnMarginalLossChanging(Nullable<global::System.Double> value);
        partial void OnMarginalLossChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_TrancheTradeLossBins_TrancheTrade", "TrancheTrade")]
        public TrancheTrade TrancheTrade
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrancheTrade>("CreditTradingModel.FK_TrancheTradeLossBins_TrancheTrade", "TrancheTrade").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrancheTrade>("CreditTradingModel.FK_TrancheTradeLossBins_TrancheTrade", "TrancheTrade").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TrancheTrade> TrancheTradeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrancheTrade>("CreditTradingModel.FK_TrancheTradeLossBins_TrancheTrade", "TrancheTrade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TrancheTrade>("CreditTradingModel.FK_TrancheTradeLossBins_TrancheTrade", "TrancheTrade", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="TTPriceHist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TTPriceHist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TTPriceHist object.
        /// </summary>
        /// <param name="simID">Initial value of the SimID property.</param>
        public static TTPriceHist CreateTTPriceHist(global::System.Int32 simID)
        {
            TTPriceHist tTPriceHist = new TTPriceHist();
            tTPriceHist.SimID = simID;
            return tTPriceHist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SimID
        {
            get
            {
                return _SimID;
            }
            set
            {
                if (_SimID != value)
                {
                    OnSimIDChanging(value);
                    ReportPropertyChanging("SimID");
                    _SimID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SimID");
                    OnSimIDChanged();
                }
            }
        }
        private global::System.Int32 _SimID;
        partial void OnSimIDChanging(global::System.Int32 value);
        partial void OnSimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TTNo
        {
            get
            {
                return _TTNo;
            }
            set
            {
                OnTTNoChanging(value);
                ReportPropertyChanging("TTNo");
                _TTNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TTNo");
                OnTTNoChanged();
            }
        }
        private Nullable<global::System.Int32> _TTNo;
        partial void OnTTNoChanging(Nullable<global::System.Int32> value);
        partial void OnTTNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Portfolio
        {
            get
            {
                return _Portfolio;
            }
            set
            {
                OnPortfolioChanging(value);
                ReportPropertyChanging("Portfolio");
                _Portfolio = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Portfolio");
                OnPortfolioChanged();
            }
        }
        private global::System.String _Portfolio;
        partial void OnPortfolioChanging(global::System.String value);
        partial void OnPortfolioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Notional
        {
            get
            {
                return _Notional;
            }
            set
            {
                OnNotionalChanging(value);
                ReportPropertyChanging("Notional");
                _Notional = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Notional");
                OnNotionalChanged();
            }
        }
        private Nullable<global::System.Double> _Notional;
        partial void OnNotionalChanging(Nullable<global::System.Double> value);
        partial void OnNotionalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Attach
        {
            get
            {
                return _Attach;
            }
            set
            {
                OnAttachChanging(value);
                ReportPropertyChanging("Attach");
                _Attach = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Attach");
                OnAttachChanged();
            }
        }
        private Nullable<global::System.Double> _Attach;
        partial void OnAttachChanging(Nullable<global::System.Double> value);
        partial void OnAttachChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private Nullable<global::System.Double> _Width;
        partial void OnWidthChanging(Nullable<global::System.Double> value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> UpfrontFee
        {
            get
            {
                return _UpfrontFee;
            }
            set
            {
                OnUpfrontFeeChanging(value);
                ReportPropertyChanging("UpfrontFee");
                _UpfrontFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpfrontFee");
                OnUpfrontFeeChanged();
            }
        }
        private Nullable<global::System.Double> _UpfrontFee;
        partial void OnUpfrontFeeChanging(Nullable<global::System.Double> value);
        partial void OnUpfrontFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Premium
        {
            get
            {
                return _Premium;
            }
            set
            {
                OnPremiumChanging(value);
                ReportPropertyChanging("Premium");
                _Premium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Premium");
                OnPremiumChanged();
            }
        }
        private Nullable<global::System.Double> _Premium;
        partial void OnPremiumChanging(Nullable<global::System.Double> value);
        partial void OnPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ParPremium
        {
            get
            {
                return _ParPremium;
            }
            set
            {
                OnParPremiumChanging(value);
                ReportPropertyChanging("ParPremium");
                _ParPremium = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParPremium");
                OnParPremiumChanged();
            }
        }
        private Nullable<global::System.Double> _ParPremium;
        partial void OnParPremiumChanging(Nullable<global::System.Double> value);
        partial void OnParPremiumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Maturity
        {
            get
            {
                return _Maturity;
            }
            set
            {
                OnMaturityChanging(value);
                ReportPropertyChanging("Maturity");
                _Maturity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Maturity");
                OnMaturityChanged();
            }
        }
        private Nullable<global::System.DateTime> _Maturity;
        partial void OnMaturityChanging(Nullable<global::System.DateTime> value);
        partial void OnMaturityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CCY
        {
            get
            {
                return _CCY;
            }
            set
            {
                OnCCYChanging(value);
                ReportPropertyChanging("CCY");
                _CCY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CCY");
                OnCCYChanged();
            }
        }
        private global::System.String _CCY;
        partial void OnCCYChanging(global::System.String value);
        partial void OnCCYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> pWAS
        {
            get
            {
                return _pWAS;
            }
            set
            {
                OnpWASChanging(value);
                ReportPropertyChanging("pWAS");
                _pWAS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pWAS");
                OnpWASChanged();
            }
        }
        private Nullable<global::System.Double> _pWAS;
        partial void OnpWASChanging(Nullable<global::System.Double> value);
        partial void OnpWASChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> pCredits
        {
            get
            {
                return _pCredits;
            }
            set
            {
                OnpCreditsChanging(value);
                ReportPropertyChanging("pCredits");
                _pCredits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pCredits");
                OnpCreditsChanged();
            }
        }
        private Nullable<global::System.Int32> _pCredits;
        partial void OnpCreditsChanging(Nullable<global::System.Int32> value);
        partial void OnpCreditsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> pCorrelation
        {
            get
            {
                return _pCorrelation;
            }
            set
            {
                OnpCorrelationChanging(value);
                ReportPropertyChanging("pCorrelation");
                _pCorrelation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pCorrelation");
                OnpCorrelationChanged();
            }
        }
        private Nullable<global::System.Double> _pCorrelation;
        partial void OnpCorrelationChanging(Nullable<global::System.Double> value);
        partial void OnpCorrelationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TranchePrice
        {
            get
            {
                return _TranchePrice;
            }
            set
            {
                OnTranchePriceChanging(value);
                ReportPropertyChanging("TranchePrice");
                _TranchePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranchePrice");
                OnTranchePriceChanged();
            }
        }
        private Nullable<global::System.Double> _TranchePrice;
        partial void OnTranchePriceChanging(Nullable<global::System.Double> value);
        partial void OnTranchePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimElapsed
        {
            get
            {
                return _SimElapsed;
            }
            set
            {
                OnSimElapsedChanging(value);
                ReportPropertyChanging("SimElapsed");
                _SimElapsed = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimElapsed");
                OnSimElapsedChanged();
            }
        }
        private global::System.String _SimElapsed;
        partial void OnSimElapsedChanging(global::System.String value);
        partial void OnSimElapsedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_TTPriceHist_PortfolioSimulation", "PortfolioSimulation")]
        public PortfolioSimulation PortfolioSimulation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_TTPriceHist_PortfolioSimulation", "PortfolioSimulation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_TTPriceHist_PortfolioSimulation", "PortfolioSimulation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PortfolioSimulation> PortfolioSimulationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_TTPriceHist_PortfolioSimulation", "PortfolioSimulation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PortfolioSimulation>("CreditTradingModel.FK_TTPriceHist_PortfolioSimulation", "PortfolioSimulation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CreditTradingModel", Name="TTRevalInput")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TTRevalInput : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TTRevalInput object.
        /// </summary>
        /// <param name="tTListName">Initial value of the TTListName property.</param>
        /// <param name="tTNo">Initial value of the TTNo property.</param>
        /// <param name="revalDate">Initial value of the RevalDate property.</param>
        public static TTRevalInput CreateTTRevalInput(global::System.String tTListName, global::System.Int32 tTNo, global::System.DateTime revalDate)
        {
            TTRevalInput tTRevalInput = new TTRevalInput();
            tTRevalInput.TTListName = tTListName;
            tTRevalInput.TTNo = tTNo;
            tTRevalInput.RevalDate = revalDate;
            return tTRevalInput;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TTListName
        {
            get
            {
                return _TTListName;
            }
            set
            {
                if (_TTListName != value)
                {
                    OnTTListNameChanging(value);
                    ReportPropertyChanging("TTListName");
                    _TTListName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TTListName");
                    OnTTListNameChanged();
                }
            }
        }
        private global::System.String _TTListName;
        partial void OnTTListNameChanging(global::System.String value);
        partial void OnTTListNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TTNo
        {
            get
            {
                return _TTNo;
            }
            set
            {
                if (_TTNo != value)
                {
                    OnTTNoChanging(value);
                    ReportPropertyChanging("TTNo");
                    _TTNo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TTNo");
                    OnTTNoChanged();
                }
            }
        }
        private global::System.Int32 _TTNo;
        partial void OnTTNoChanging(global::System.Int32 value);
        partial void OnTTNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RevalDate
        {
            get
            {
                return _RevalDate;
            }
            set
            {
                if (_RevalDate != value)
                {
                    OnRevalDateChanging(value);
                    ReportPropertyChanging("RevalDate");
                    _RevalDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RevalDate");
                    OnRevalDateChanged();
                }
            }
        }
        private global::System.DateTime _RevalDate;
        partial void OnRevalDateChanging(global::System.DateTime value);
        partial void OnRevalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Correlation
        {
            get
            {
                return _Correlation;
            }
            set
            {
                OnCorrelationChanging(value);
                ReportPropertyChanging("Correlation");
                _Correlation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Correlation");
                OnCorrelationChanged();
            }
        }
        private Nullable<global::System.Double> _Correlation;
        partial void OnCorrelationChanging(Nullable<global::System.Double> value);
        partial void OnCorrelationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Draws
        {
            get
            {
                return _Draws;
            }
            set
            {
                OnDrawsChanging(value);
                ReportPropertyChanging("Draws");
                _Draws = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Draws");
                OnDrawsChanged();
            }
        }
        private Nullable<global::System.Int32> _Draws;
        partial void OnDrawsChanging(Nullable<global::System.Int32> value);
        partial void OnDrawsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_TTRevalInput_TrancheTrade", "TrancheTrade")]
        public TrancheTrade TrancheTrade
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrancheTrade>("CreditTradingModel.FK_TTRevalInput_TrancheTrade", "TrancheTrade").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrancheTrade>("CreditTradingModel.FK_TTRevalInput_TrancheTrade", "TrancheTrade").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TrancheTrade> TrancheTradeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrancheTrade>("CreditTradingModel.FK_TTRevalInput_TrancheTrade", "TrancheTrade");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TrancheTrade>("CreditTradingModel.FK_TTRevalInput_TrancheTrade", "TrancheTrade", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CreditTradingModel", "FK_TTRevalInput_TTList", "TTList")]
        public TrancheTradeList TTList1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrancheTradeList>("CreditTradingModel.FK_TTRevalInput_TTList", "TTList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrancheTradeList>("CreditTradingModel.FK_TTRevalInput_TTList", "TTList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TrancheTradeList> TTList1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TrancheTradeList>("CreditTradingModel.FK_TTRevalInput_TTList", "TTList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TrancheTradeList>("CreditTradingModel.FK_TTRevalInput_TTList", "TTList", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
